/* Generated by Spago v0.93.44 */
(() => {
  // output/Control.Bind/foreign.js
  var arrayBind = typeof Array.prototype.flatMap === "function" ? function(arr) {
    return function(f) {
      return arr.flatMap(f);
    };
  } : function(arr) {
    return function(f) {
      var result = [];
      var l2 = arr.length;
      for (var i2 = 0; i2 < l2; i2++) {
        var xs = f(arr[i2]);
        var k = xs.length;
        for (var j = 0; j < k; j++) {
          result.push(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g2) {
        return function(x8) {
          return f(g2(x8));
        };
      };
    }
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x8) {
      return x8;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var flip = function(f) {
    return function(b2) {
      return function(a3) {
        return f(a3)(b2);
      };
    };
  };
  var $$const = function(a3) {
    return function(v2) {
      return a3;
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l2 = arr.length;
      var result = new Array(l2);
      for (var i2 = 0; i2 < l2; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map110 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map110(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map110 = map(dictFunctor);
    return function(f) {
      return function(x8) {
        return map110($$const(x8))(f);
      };
    };
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var apply = function(dict) {
    return dict.apply;
  };
  var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map23 = map(dictApply.Functor0());
    return function(a3) {
      return function(b2) {
        return apply1(map23($$const(identity2))(a3))(b2);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure13 = pure(dictApplicative);
    return function(v2) {
      return function(v1) {
        if (!v2) {
          return v1;
        }
        ;
        if (v2) {
          return pure13(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v2.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure13 = pure(dictApplicative);
    return function(v2) {
      return function(v1) {
        if (v2) {
          return v1;
        }
        ;
        if (!v2) {
          return pure13(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v2.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply2 = apply(dictApplicative.Apply0());
    var pure13 = pure(dictApplicative);
    return function(f) {
      return function(a3) {
        return apply2(pure13(f))(a3);
      };
    };
  };

  // output/Control.Bind/index.js
  var discard = function(dict) {
    return dict.discard;
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped12 = bindFlipped(dictBind);
    return function(f) {
      return function(g2) {
        return function(a3) {
          return bindFlipped12(f)(g2(a3));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind15 = bind(dictBind);
    return function(f) {
      return function(g2) {
        return function(a3) {
          return bind15(f(a3))(g2);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq2) {
      return function(gt) {
        return function(x8) {
          return function(y8) {
            return x8 < y8 ? lt : x8 === y8 ? eq2 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r22) {
      return r1 === r22;
    };
  };
  var eqIntImpl = refEq;
  var eqStringImpl = refEq;

  // output/Data.Eq/index.js
  var eqString = {
    eq: eqStringImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eq = function(dict) {
    return dict.eq;
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();

  // output/Data.Ring/foreign.js
  var intSub = function(x8) {
    return function(y8) {
      return x8 - y8 | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x8) {
    return function(y8) {
      return x8 + y8 | 0;
    };
  };
  var intMul = function(x8) {
    return function(y8) {
      return x8 * y8 | 0;
    };
  };

  // output/Data.Semiring/index.js
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };

  // output/Data.Ring/index.js
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };

  // output/Data.Ord/index.js
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var compare = function(dict) {
    return dict.compare;
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  // output/Data.Show/index.js
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var show = function(dict) {
    return dict.show;
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a3) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a3))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v2) {
        return ff1;
      },
      tt: function(v2) {
        return tt1;
      },
      implies: function(f) {
        return function(g2) {
          return function(a3) {
            return implies1(f(a3))(g2(a3));
          };
        };
      },
      conj: function(f) {
        return function(g2) {
          return function(a3) {
            return conj1(f(a3))(g2(a3));
          };
        };
      },
      disj: function(f) {
        return function(g2) {
          return function(a3) {
            return disj1(f(a3))(g2(a3));
          };
        };
      },
      not: function(f) {
        return function(a3) {
          return not1(f(a3));
        };
      }
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x8) {
    return Math.min(Math.abs(x8), 2147483647);
  };
  var intDiv = function(x8) {
    return function(y8) {
      if (y8 === 0) return 0;
      return y8 > 0 ? Math.floor(x8 / y8) : -Math.floor(x8 / -y8);
    };
  };
  var intMod = function(x8) {
    return function(y8) {
      if (y8 === 0) return 0;
      var yy = Math.abs(y8);
      return (x8 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var snd = function(v2) {
    return v2.value1;
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v2) {
    return v2.value0;
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var modify_ = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };

  // output/Data.Array/foreign.js
  var replicateFill = function(count, value12) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value12);
  };
  var replicatePolyfill = function(count, value12) {
    var result = [];
    var n = 0;
    for (var i2 = 0; i2 < count; i2++) {
      result[n++] = value12;
    }
    return result;
  };
  var replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = /* @__PURE__ */ function() {
    function Cons2(head2, tail) {
      this.head = head2;
      this.tail = tail;
    }
    var emptyList = {};
    function curryCons(head2) {
      return function(tail) {
        return new Cons2(head2, tail);
      };
    }
    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr5, xs) {
      return listToArray(foldr5(curryCons)(emptyList)(xs));
    };
  }();
  var length = function(xs) {
    return xs.length;
  };
  var findIndexImpl = function(just, nothing, f, xs) {
    for (var i2 = 0, l2 = xs.length; i2 < l2; i2++) {
      if (f(xs[i2])) return just(i2);
    }
    return nothing;
  };
  var _deleteAt = function(just, nothing, i2, l2) {
    if (i2 < 0 || i2 >= l2.length) return nothing;
    var l1 = l2.slice();
    l1.splice(i2, 1);
    return just(l1);
  };

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind5 = bind(dictMonad.Bind1());
    var unless2 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind5(mb)(function(b2) {
          return unless2(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind5 = bind(dictMonad.Bind1());
    var pure9 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a3) {
        return bind5(f)(function(f$prime) {
          return bind5(a3)(function(a$prime) {
            return pure9(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.Maybe/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var maybe = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Nothing) {
          return v2;
        }
        ;
        if (v22 instanceof Just) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v2) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v2(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a3) {
    return maybe(a3)(identity3);
  };
  var fromJust = function() {
    return function(v2) {
      if (v2 instanceof Just) {
        return v2.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v2.constructor.name]);
    };
  };
  var applyMaybe = {
    apply: function(v2) {
      return function(v1) {
        if (v2 instanceof Just) {
          return map2(v2.value0)(v1);
        }
        ;
        if (v2 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v2) {
      return function(v1) {
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        if (v2 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v2.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  }();
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var either = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Left) {
          return v2(v22.value0);
        }
        ;
        if (v22 instanceof Right) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };

  // output/Data.Identity/index.js
  var Identity = function(x8) {
    return x8;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v2) {
      return function(v1) {
        return v2(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v2) {
      return function(f) {
        return f(v2);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect/foreign.js
  var pureE = function(a3) {
    return function() {
      return a3;
    };
  };
  var bindE = function(a3) {
    return function(f) {
      return function() {
        return f(a3())();
      };
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val) {
    return function(ref2) {
      return function() {
        ref2.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_2 = function(f) {
    return function(s) {
      return $$void2(modify(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map3 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a3) {
        var fromDone = function(v2) {
          if (v2 instanceof Done) {
            return v2.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [v2.constructor.name]);
        };
        return function __do2() {
          var r5 = bindFlipped2($$new)(f(a3))();
          (function() {
            while (!function __do3() {
              var v2 = read(r5)();
              if (v2 instanceof Loop) {
                var e = f(v2.value0)();
                write(e)(r5)();
                return false;
              }
              ;
              if (v2 instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [v2.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map3(fromDone)(read(r5))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init2) {
      return function(xs) {
        var acc = init2;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init2) {
      return function(xs) {
        var acc = init2;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Control.Plus/index.js
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Data.Bifunctor/index.js
  var bimap = function(dict) {
    return dict.bimap;
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x8) {
    return x8;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };

  // output/Data.Foldable/index.js
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond2 = applySecond(dictApplicative.Apply0());
    var pure9 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond2(f($454));
        })(pure9(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var foldableMaybe = {
    foldr: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v2(v22.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldl: function(v2) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v2(v1)(v22.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      return function(v2) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty2;
          }
          ;
          if (v1 instanceof Just) {
            return v2(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v2.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append5 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x8) {
          return function(acc) {
            return append5(f(x8))(acc);
          };
        })(mempty2);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };

  // output/Data.Function.Uncurried/foreign.js
  var runFn2 = function(fn) {
    return function(a3) {
      return function(b2) {
        return fn(a3, b2);
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a3) {
      return function(b2) {
        return function(c) {
          return function(d5) {
            return fn(a3, b2, c, d5);
          };
        };
      };
    };
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l2 = xs.length;
      var result = Array(l2);
      for (var i2 = 0; i2 < l2; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.Array/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var fromFoldable = function(dictFoldable) {
    return runFn2(fromFoldableImpl)(foldr(dictFoldable));
  };
  var findIndex = /* @__PURE__ */ function() {
    return runFn4(findIndexImpl)(Just.create)(Nothing.value);
  }();
  var deleteAt = /* @__PURE__ */ function() {
    return runFn4(_deleteAt)(Just.create)(Nothing.value);
  }();
  var deleteBy = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v22.length === 0) {
          return [];
        }
        ;
        return maybe(v22)(function(i2) {
          return fromJust2(deleteAt(i2)(v22));
        })(findIndex(v2(v1))(v22));
      };
    };
  };

  // output/Data.FoldableWithIndex/index.js
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var singleton2 = function(dictPlus) {
    var empty7 = empty(dictPlus);
    return function(a3) {
      return new NonEmpty(a3, empty7);
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ function() {
    function Nil2() {
    }
    ;
    Nil2.value = new Nil2();
    return Nil2;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons2.create = function(value0) {
      return function(value1) {
        return new Cons2(value0, value1);
      };
    };
    return Cons2;
  }();
  var NonEmptyList = function(x8) {
    return x8;
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v2);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v22) {
            if (v22 instanceof Cons && (v22.value1 instanceof Cons && v22.value1.value1 instanceof Nil)) {
              return new Cons(f(v22.value0), new Cons(f(v22.value1.value0), Nil.value));
            }
            ;
            if (v22 instanceof Cons && v22.value1 instanceof Nil) {
              return new Cons(f(v22.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v22, v3) {
                if (v22 instanceof Cons && (v22.value0 instanceof Cons && (v22.value0.value1 instanceof Cons && v22.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v22.value1;
                  $copy_v3 = new Cons(f(v22.value0.value0), new Cons(f(v22.value0.value1.value0), new Cons(f(v22.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v2)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v2, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v2);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v2.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v2) {
            if (v2 instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v2 instanceof Cons) {
              $tco_var_b = f(b2)(v2.value0);
              $copy_v = v2.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v2.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty2);
      };
    }
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();

  // output/Data.Map.Internal/index.js
  var $runtime_lazy2 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var Leaf = /* @__PURE__ */ function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  }();
  var Node = /* @__PURE__ */ function() {
    function Node2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Node2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Node2;
  }();
  var Split = /* @__PURE__ */ function() {
    function Split2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Split2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Split2(value0, value1, value22);
        };
      };
    };
    return Split2;
  }();
  var SplitLast = /* @__PURE__ */ function() {
    function SplitLast2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    SplitLast2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new SplitLast2(value0, value1, value22);
        };
      };
    };
    return SplitLast2;
  }();
  var unsafeNode = function(k, v2, l2, r5) {
    if (l2 instanceof Leaf) {
      if (r5 instanceof Leaf) {
        return new Node(1, 1, k, v2, l2, r5);
      }
      ;
      if (r5 instanceof Node) {
        return new Node(1 + r5.value0 | 0, 1 + r5.value1 | 0, k, v2, l2, r5);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 702, column 5 - line 706, column 39): " + [r5.constructor.name]);
    }
    ;
    if (l2 instanceof Node) {
      if (r5 instanceof Leaf) {
        return new Node(1 + l2.value0 | 0, 1 + l2.value1 | 0, k, v2, l2, r5);
      }
      ;
      if (r5 instanceof Node) {
        return new Node(1 + function() {
          var $280 = l2.value0 > r5.value0;
          if ($280) {
            return l2.value0;
          }
          ;
          return r5.value0;
        }() | 0, (1 + l2.value1 | 0) + r5.value1 | 0, k, v2, l2, r5);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 708, column 5 - line 712, column 68): " + [r5.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 700, column 32 - line 712, column 68): " + [l2.constructor.name]);
  };
  var singleton3 = function(k) {
    return function(v2) {
      return new Node(1, 1, k, v2, Leaf.value, Leaf.value);
    };
  };
  var unsafeBalancedNode = /* @__PURE__ */ function() {
    var height18 = function(v2) {
      if (v2 instanceof Leaf) {
        return 0;
      }
      ;
      if (v2 instanceof Node) {
        return v2.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 757, column 12 - line 759, column 26): " + [v2.constructor.name]);
    };
    var rotateLeft = function(k, v2, l2, rk, rv, rl, rr) {
      if (rl instanceof Node && rl.value0 > height18(rr)) {
        return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v2, l2, rl.value4), unsafeNode(rk, rv, rl.value5, rr));
      }
      ;
      return unsafeNode(rk, rv, unsafeNode(k, v2, l2, rl), rr);
    };
    var rotateRight = function(k, v2, lk, lv, ll, lr, r5) {
      if (lr instanceof Node && height18(ll) <= lr.value0) {
        return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v2, lr.value5, r5));
      }
      ;
      return unsafeNode(lk, lv, ll, unsafeNode(k, v2, lr, r5));
    };
    return function(k, v2, l2, r5) {
      if (l2 instanceof Leaf) {
        if (r5 instanceof Leaf) {
          return singleton3(k)(v2);
        }
        ;
        if (r5 instanceof Node && r5.value0 > 1) {
          return rotateLeft(k, v2, l2, r5.value2, r5.value3, r5.value4, r5.value5);
        }
        ;
        return unsafeNode(k, v2, l2, r5);
      }
      ;
      if (l2 instanceof Node) {
        if (r5 instanceof Node) {
          if (r5.value0 > (l2.value0 + 1 | 0)) {
            return rotateLeft(k, v2, l2, r5.value2, r5.value3, r5.value4, r5.value5);
          }
          ;
          if (l2.value0 > (r5.value0 + 1 | 0)) {
            return rotateRight(k, v2, l2.value2, l2.value3, l2.value4, l2.value5, r5);
          }
          ;
        }
        ;
        if (r5 instanceof Leaf && l2.value0 > 1) {
          return rotateRight(k, v2, l2.value2, l2.value3, l2.value4, l2.value5, r5);
        }
        ;
        return unsafeNode(k, v2, l2, r5);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 717, column 40 - line 738, column 34): " + [l2.constructor.name]);
    };
  }();
  var $lazy_unsafeSplit = /* @__PURE__ */ $runtime_lazy2("unsafeSplit", "Data.Map.Internal", function() {
    return function(comp, k, m) {
      if (m instanceof Leaf) {
        return new Split(Nothing.value, Leaf.value, Leaf.value);
      }
      ;
      if (m instanceof Node) {
        var v2 = comp(k)(m.value2);
        if (v2 instanceof LT) {
          var v1 = $lazy_unsafeSplit(793)(comp, k, m.value4);
          return new Split(v1.value0, v1.value1, unsafeBalancedNode(m.value2, m.value3, v1.value2, m.value5));
        }
        ;
        if (v2 instanceof GT) {
          var v1 = $lazy_unsafeSplit(796)(comp, k, m.value5);
          return new Split(v1.value0, unsafeBalancedNode(m.value2, m.value3, m.value4, v1.value1), v1.value2);
        }
        ;
        if (v2 instanceof EQ) {
          return new Split(new Just(m.value3), m.value4, m.value5);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 791, column 5 - line 799, column 30): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 787, column 34 - line 799, column 30): " + [m.constructor.name]);
    };
  });
  var unsafeSplit = /* @__PURE__ */ $lazy_unsafeSplit(786);
  var $lazy_unsafeSplitLast = /* @__PURE__ */ $runtime_lazy2("unsafeSplitLast", "Data.Map.Internal", function() {
    return function(k, v2, l2, r5) {
      if (r5 instanceof Leaf) {
        return new SplitLast(k, v2, l2);
      }
      ;
      if (r5 instanceof Node) {
        var v1 = $lazy_unsafeSplitLast(779)(r5.value2, r5.value3, r5.value4, r5.value5);
        return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v2, l2, v1.value2));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 776, column 37 - line 780, column 57): " + [r5.constructor.name]);
    };
  });
  var unsafeSplitLast = /* @__PURE__ */ $lazy_unsafeSplitLast(775);
  var unsafeJoinNodes = function(v2, v1) {
    if (v2 instanceof Leaf) {
      return v1;
    }
    ;
    if (v2 instanceof Node) {
      var v22 = unsafeSplitLast(v2.value2, v2.value3, v2.value4, v2.value5);
      return unsafeBalancedNode(v22.value0, v22.value1, v22.value2, v1);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 764, column 25 - line 768, column 38): " + [v2.constructor.name, v1.constructor.name]);
  };
  var lookup = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2) {
          if (v2 instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v2 instanceof Node) {
            var v1 = compare2(k)(v2.value2);
            if (v1 instanceof LT) {
              $copy_v = v2.value4;
              return;
            }
            ;
            if (v1 instanceof GT) {
              $copy_v = v2.value5;
              return;
            }
            ;
            if (v1 instanceof EQ) {
              $tco_done = true;
              return new Just(v2.value3);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 283, column 7 - line 286, column 22): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 8 - line 286, column 22): " + [v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var insert = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k) {
      return function(v2) {
        var go2 = function(v1) {
          if (v1 instanceof Leaf) {
            return singleton3(k)(v2);
          }
          ;
          if (v1 instanceof Node) {
            var v22 = compare2(k)(v1.value2);
            if (v22 instanceof LT) {
              return unsafeBalancedNode(v1.value2, v1.value3, go2(v1.value4), v1.value5);
            }
            ;
            if (v22 instanceof GT) {
              return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go2(v1.value5));
            }
            ;
            if (v22 instanceof EQ) {
              return new Node(v1.value0, v1.value1, k, v2, v1.value4, v1.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 471, column 7 - line 474, column 35): " + [v22.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 8 - line 474, column 35): " + [v1.constructor.name]);
        };
        return go2;
      };
    };
  };
  var functorMap = {
    map: function(f) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          return new Node(v2.value0, v2.value1, v2.value2, f(v2.value3), go2(v2.value4), go2(v2.value5));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 10 - line 150, column 39): " + [v2.constructor.name]);
      };
      return go2;
    }
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy2("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(172)(m$prime.value4, f(m$prime.value3)($lazy_go(172)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 169, column 26 - line 172, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(169);
        return function(m) {
          return go2(m, z2);
        };
      };
    },
    foldl: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy2("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(178)(f($lazy_go(178)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 175, column 26 - line 178, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(175);
        return function(m) {
          return go2(z2, m);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append12 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return mempty2;
          }
          ;
          if (v2 instanceof Node) {
            return append12(go2(v2.value4))(append12(f(v2.value3))(go2(v2.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 181, column 10 - line 184, column 28): " + [v2.constructor.name]);
        };
        return go2;
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy2("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(192)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(192)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 189, column 26 - line 192, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(189);
        return function(m) {
          return go2(m, z2);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z2) {
        var $lazy_go = $runtime_lazy2("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(198)(f(m$prime.value2)($lazy_go(198)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 195, column 26 - line 198, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(195);
        return function(m) {
          return go2(z2, m);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append12 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v2) {
          if (v2 instanceof Leaf) {
            return mempty2;
          }
          ;
          if (v2 instanceof Node) {
            return append12(go2(v2.value4))(append12(f(v2.value2)(v2.value3))(go2(v2.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 201, column 10 - line 204, column 30): " + [v2.constructor.name]);
        };
        return go2;
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var keys = /* @__PURE__ */ function() {
    return foldrWithIndex(foldableWithIndexMap)(function(k) {
      return function(v2) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  }();
  var empty2 = /* @__PURE__ */ function() {
    return Leaf.value;
  }();
  var fromFoldable2 = function(dictOrd) {
    var insert12 = insert(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m) {
        return function(v2) {
          return insert12(v2.value0)(v2.value1)(m);
        };
      })(empty2);
    };
  };
  var $$delete = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k) {
      var go2 = function(v2) {
        if (v2 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v2 instanceof Node) {
          var v1 = compare2(k)(v2.value2);
          if (v1 instanceof LT) {
            return unsafeBalancedNode(v2.value2, v2.value3, go2(v2.value4), v2.value5);
          }
          ;
          if (v1 instanceof GT) {
            return unsafeBalancedNode(v2.value2, v2.value3, v2.value4, go2(v2.value5));
          }
          ;
          if (v1 instanceof EQ) {
            return unsafeJoinNodes(v2.value4, v2.value5);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 7 - line 501, column 43): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 8 - line 501, column 43): " + [v2.constructor.name]);
      };
      return go2;
    };
  };
  var alter = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v2 = unsafeSplit(compare2, k, m);
          var v22 = f(v2.value0);
          if (v22 instanceof Nothing) {
            return unsafeJoinNodes(v2.value1, v2.value2);
          }
          ;
          if (v22 instanceof Just) {
            return unsafeBalancedNode(k, v22.value0, v2.value1, v2.value2);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 514, column 3 - line 518, column 41): " + [v22.constructor.name]);
        };
      };
    };
  };

  // output/Data.List/index.js
  var reverse2 = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v2, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v2;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v2);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v2.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var $$null = function(v2) {
    if (v2 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };

  // output/Data.Set/index.js
  var foldMap2 = /* @__PURE__ */ foldMap(foldableList);
  var foldl2 = /* @__PURE__ */ foldl(foldableList);
  var foldr3 = /* @__PURE__ */ foldr(foldableList);
  var $$Set = function(x8) {
    return x8;
  };
  var toList = function(v2) {
    return keys(v2);
  };
  var fromMap = $$Set;
  var foldableSet = {
    foldMap: function(dictMonoid) {
      var foldMap12 = foldMap2(dictMonoid);
      return function(f) {
        var $98 = foldMap12(f);
        return function($99) {
          return $98(toList($99));
        };
      };
    },
    foldl: function(f) {
      return function(x8) {
        var $100 = foldl2(f)(x8);
        return function($101) {
          return $100(toList($101));
        };
      };
    },
    foldr: function(f) {
      return function(x8) {
        var $102 = foldr3(f)(x8);
        return function($103) {
          return $102(toList($103));
        };
      };
    }
  };

  // output/Data.Map/index.js
  var keys2 = /* @__PURE__ */ function() {
    var $38 = $$void(functorMap);
    return function($39) {
      return fromMap($38($39));
    };
  }();

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error4) {
        return left(error4);
      }
    }
    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error4) {
        k(left(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size5 = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill2(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function() {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill2(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step3 = aff;
      var fail2 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step3 = bhead(step3);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail2 = util.left(e);
                step3 = null;
              }
              break;
            case STEP_RESULT:
              if (util.isLeft(step3)) {
                status = RETURN;
                fail2 = step3;
                step3 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step3 = util.fromRight(step3);
              }
              break;
            case CONTINUE:
              switch (step3.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step3._2;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step3 = util.right(step3._1);
                  } else {
                    status = STEP_BIND;
                    step3 = step3._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step3 = runSync(util.left, util.right, step3._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step3 = runAsync(util.left, step3._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step3 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail2 = util.left(step3._1);
                  step3 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step3, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step3, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step3._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step3._1) {
                    tmp.run();
                  }
                  step3 = util.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step3 = sequential3(util, supervisor, step3._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step3 = interrupt || fail2 || step3;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail2) {
                      status = CONTINUE;
                      step3 = attempt._2(util.fromLeft(fail2));
                      fail2 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail2) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step3 = util.fromRight(step3);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail2 === null) {
                      result = util.fromRight(step3);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step3 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail2), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step3 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail2) {
                      step3 = attempt._1.failed(util.fromLeft(fail2))(attempt._2);
                    } else {
                      step3 = attempt._1.completed(util.fromRight(step3))(attempt._2);
                    }
                    fail2 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail2), attempts, interrupt);
                    status = CONTINUE;
                    step3 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step3 = attempt._1;
                    fail2 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step3));
                }
              }
              joins = null;
              if (interrupt && fail2) {
                setTimeout(function() {
                  throw util.fromLeft(fail2);
                }, 0);
              } else if (util.isLeft(step3) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util.fromLeft(step3);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join4) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join4.rethrow;
            join4.handler(step3)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join4;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill2(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error4);
              status = COMPLETED;
              step3 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step3(error4)), attempts, interrupt);
                }
                status = RETURN;
                step3 = null;
                fail2 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step3 = null;
                fail2 = null;
              }
          }
          return canceler;
        };
      }
      function join3(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill2,
        join: join3,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root = EMPTY;
      function kill2(error4, par2, cb2) {
        var step3 = par2;
        var head2 = null;
        var tail = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop: while (true) {
          tmp = null;
          switch (step3.tag) {
            case FORKED:
              if (step3._3 === EMPTY) {
                tmp = fibers[step3._1];
                kills2[count++] = tmp.kill(error4, function(result) {
                  return function() {
                    count--;
                    if (count === 0) {
                      cb2(result)();
                    }
                  };
                });
              }
              if (head2 === null) {
                break loop;
              }
              step3 = head2._2;
              if (tail === null) {
                head2 = null;
              } else {
                head2 = tail._1;
                tail = tail._2;
              }
              break;
            case MAP:
              step3 = step3._2;
              break;
            case APPLY:
            case ALT:
              if (head2) {
                tail = new Aff2(CONS, head2, tail);
              }
              head2 = step3;
              step3 = step3._1;
              break;
          }
        }
        if (count === 0) {
          cb2(util.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join3(result, head2, tail) {
        var fail2, step3, lhs, rhs, tmp, kid;
        if (util.isLeft(result)) {
          fail2 = result;
          step3 = null;
        } else {
          step3 = result;
          fail2 = null;
        }
        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;
          if (interrupt !== null) {
            return;
          }
          if (head2 === null) {
            cb(fail2 || step3)();
            return;
          }
          if (head2._3 !== EMPTY) {
            return;
          }
          switch (head2.tag) {
            case MAP:
              if (fail2 === null) {
                head2._3 = util.right(head2._1(util.fromRight(step3)));
                step3 = head2._3;
              } else {
                head2._3 = fail2;
              }
              break;
            case APPLY:
              lhs = head2._1._3;
              rhs = head2._2._3;
              if (fail2) {
                head2._3 = fail2;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, fail2 === lhs ? head2._2 : head2._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join3(fail2, null, null);
                    } else {
                      join3(fail2, tail._1, tail._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                return;
              } else {
                step3 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head2._3 = step3;
              }
              break;
            case ALT:
              lhs = head2._1._3;
              rhs = head2._2._3;
              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              }
              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail2 = step3 === lhs ? rhs : lhs;
                step3 = null;
                head2._3 = fail2;
              } else {
                head2._3 = step3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, step3 === lhs ? head2._2 : head2._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join3(step3, null, null);
                    } else {
                      join3(step3, tail._1, tail._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              }
              break;
          }
          if (tail === null) {
            head2 = null;
          } else {
            head2 = tail._1;
            tail = tail._2;
          }
        }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join3(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step3 = par;
        var head2 = null;
        var tail = null;
        var tmp, fid;
        loop: while (true) {
          tmp = null;
          fid = null;
          switch (status) {
            case CONTINUE:
              switch (step3.tag) {
                case MAP:
                  if (head2) {
                    tail = new Aff2(CONS, head2, tail);
                  }
                  head2 = new Aff2(MAP, step3._1, EMPTY, EMPTY);
                  step3 = step3._2;
                  break;
                case APPLY:
                  if (head2) {
                    tail = new Aff2(CONS, head2, tail);
                  }
                  head2 = new Aff2(APPLY, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                case ALT:
                  if (head2) {
                    tail = new Aff2(CONS, head2, tail);
                  }
                  head2 = new Aff2(ALT, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                default:
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step3;
                  step3 = new Aff2(FORKED, fid, new Aff2(CONS, head2, tail), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step3)
                  })();
                  fibers[fid] = tmp;
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
              }
              break;
            case RETURN:
              if (head2 === null) {
                break loop;
              }
              if (head2._1 === EMPTY) {
                head2._1 = step3;
                status = CONTINUE;
                step3 = head2._2;
                head2._2 = EMPTY;
              } else {
                head2._2 = step3;
                step3 = head2;
                if (tail === null) {
                  head2 = null;
                } else {
                  head2 = tail._1;
                  tail = tail._2;
                }
              }
          }
        }
        root = step3;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill2(error4, root, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value12) {
          return Aff.Pure(f(value12));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util, aff) {
    return function() {
      return Aff.Fiber(util, null, aff);
    };
  }
  var _sequential = Aff.Seq;

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map23 = map(Monad0.Bind1().Apply0().Functor0());
    var pure9 = pure(Monad0.Applicative0());
    return function(a3) {
      return catchError1(map23(Right.create)(a3))(function($52) {
        return pure9(Left.create($52));
      });
    };
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map4 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x8) {
    return x8;
  };
  var runExceptT = function(v2) {
    return v2;
  };
  var mapExceptT = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map110 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map110(map4(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind5 = bind(dictMonad.Bind1());
    var pure9 = pure(dictMonad.Applicative0());
    return {
      bind: function(v2) {
        return function(k) {
          return bind5(v2)(either(function($193) {
            return pure9(Left.create($193));
          })(function(a3) {
            var v1 = k(a3);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $194 = pure(dictMonad.Applicative0());
        return function($195) {
          return ExceptT($194(Right.create($195)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $204 = pure(dictMonad.Applicative0());
        return function($205) {
          return ExceptT($204(Left.create($205)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Control.Parallel/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var parallel4 = parallel(dictParallel);
    return function(dictApplicative) {
      var traverse_7 = traverse_(dictApplicative);
      return function(dictFoldable) {
        var traverse_14 = traverse_7(dictFoldable);
        return function(f) {
          var $51 = traverse_14(function($53) {
            return parallel4(f($53));
          });
          return function($52) {
            return sequential3($51($52));
          };
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictApplicative) {
      var parTraverse_2 = parTraverse_1(dictApplicative);
      return function(dictFoldable) {
        return parTraverse_2(dictFoldable)(identity4);
      };
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy3 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map5 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x8) {
    return x8;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v2) {
      if (v2 instanceof Right) {
        return v2.value0;
      }
      ;
      if (v2 instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v2.constructor.name]);
    };
    var unsafeFromLeft = function(v2) {
      if (v2 instanceof Left) {
        return v2.value0;
      }
      ;
      if (v2 instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v2.constructor.name]);
    };
    var isLeft = function(v2) {
      if (v2 instanceof Left) {
        return true;
      }
      ;
      if (v2 instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v2.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do2() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy3("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var applyAff = /* @__PURE__ */ $lazy_applyAff(73);
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a3) {
      return bracket(pure22(unit))($$const(fin))($$const(a3));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Apply0: function() {
      return applyAff;
    },
    Apply1: function() {
      return applyParAff;
    }
  };
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var applicativeParAff = {
    pure: function($76) {
      return parallel2(pure22($76));
    },
    Apply0: function() {
      return applyParAff;
    }
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($77) {
    return Canceler($$const(liftEffect2($77)));
  };
  var joinFiber = function(v2) {
    return makeAff(function(k) {
      return map5(effectCanceler)(v2.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v2) {
      return bind1(liftEffect2(v2.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v2.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map5(effectCanceler)(v2.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($83) {
        return liftEffect2(k($83));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void3(runAff(k)(aff));
    };
  };
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a3) {
        return bind1(k(a3))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a3, r5, f) {
    return a3 == null ? r5 : f(a3);
  }
  function notNull(x8) {
    return x8;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Web.DOM.ParentNode/index.js
  var map6 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map6(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return doc.readyState;
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse = function(v2) {
    if (v2 === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v2 === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v2 === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map7 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = function(doc) {
    return map7(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse($5));
      };
    }())(function() {
      return _readyState(doc);
    });
  };

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value12) {
    var tag = Object.prototype.toString.call(value12);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value12);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var fromElement = function(x8) {
    return _read(Nothing.value, Just.create, x8);
  };

  // output/Web.HTML.Window/foreign.js
  function document(window2) {
    return function() {
      return window2.document;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Web.HTML.Event.EventTypes/index.js
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";

  // output/Halogen.Aff.Util/index.js
  var bind2 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure3 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeEffect);
  var map8 = /* @__PURE__ */ map(functorEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query2) {
    return bind2(liftEffect3(bindFlipped4(composeKleisliFlipped2(function() {
      var $16 = querySelector(query2);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document))(windowImpl)))(function(mel) {
      return pure3(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure1(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do2() {
      var rs = bindFlipped4(readyState)(bindFlipped4(document)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map8(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v2) {
          return callback(new Right(unit));
        })();
        addEventListener(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard2(bindAff)(awaitLoad)(function() {
    return bind2(selectElement("body"))(function(body2) {
      return maybe(throwError2(error("Could not find body")))(pure3)(body2);
    });
  });

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f) {
    return function(v2) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v2);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v2) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v2);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.Data.Slot/index.js
  var foreachSlot = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMap);
    return function(v2) {
      return function(k) {
        return traverse_7(function($54) {
          return k($54);
        })(v2);
      };
    };
  };
  var empty3 = empty2;

  // output/Data.String.Common/foreign.js
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  }();
  var Action = /* @__PURE__ */ function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  }();

  // output/Halogen.VDom.Machine/index.js
  var Step = /* @__PURE__ */ function() {
    function Step3(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step3(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step3;
  }();
  var unStep = unsafeCoerce2;
  var step2 = function(v2, a3) {
    return v2.value2(v2.value1, a3);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v2) {
    return v2.value3(v2.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v2) {
    return v2.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map9 = /* @__PURE__ */ map(functorArray);
  var map12 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g2) {
        return unGraft(function(v2) {
          return graft(new Graft(function($63) {
            return f(v2.value0($63));
          }, function($64) {
            return g2(v2.value1($64));
          }, v2.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v2) {
    var go2 = function(v22) {
      if (v22 instanceof Text) {
        return new Text(v22.value0);
      }
      ;
      if (v22 instanceof Elem) {
        return new Elem(v22.value0, v22.value1, v2.value0(v22.value2), map9(go2)(v22.value3));
      }
      ;
      if (v22 instanceof Keyed) {
        return new Keyed(v22.value0, v22.value1, v2.value0(v22.value2), map9(map12(go2))(v22.value3));
      }
      ;
      if (v22 instanceof Widget) {
        return new Widget(v2.value1(v22.value0));
      }
      ;
      if (v22 instanceof Grafted) {
        return new Grafted(bimap2(v2.value0)(v2.value1)(v22.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v22.constructor.name]);
    };
    return go2(v2.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key, obj) {
    return obj[key];
  }
  function unsafeHasAny(key, obj) {
    return obj.hasOwnProperty(key);
  }
  function unsafeSetAny(key, val, obj) {
    obj[key] = val;
  }
  function forE2(a3, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a3.length; i2++) {
      b2.push(f(i2, a3[i2]));
    }
    return b2;
  }
  function forEachE(a3, f) {
    for (var i2 = 0; i2 < a3.length; i2++) {
      f(a3[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a22, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a22.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a22[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a22[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a3 = as[i2];
      var k = fk(a3);
      o[k] = f(k, i2, a3);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a3 = as[i2];
      var k = fk(a3);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a3);
      } else {
        o2[k] = f3(k, i2, a3);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a3, b2) {
    return a3 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns2, name15, doc) {
    if (ns2 != null) {
      return doc.createElementNS(ns2, name15);
    } else {
      return doc.createElement(name15);
    }
  }
  function insertChildIx(i2, a3, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a3) {
      b2.insertBefore(a3, n);
    }
  }
  function removeChild(a3, b2) {
    if (b2 && a3.parentNode === b2) {
      b2.removeChild(a3);
    }
  }
  function parentNode(a3) {
    return a3.parentNode;
  }
  function setAttribute(ns2, attr3, val, el) {
    if (ns2 != null) {
      el.setAttributeNS(ns2, attr3, val);
    } else {
      el.setAttribute(attr3, val);
    }
  }
  function removeAttribute(ns2, attr3, el) {
    if (ns2 != null) {
      el.removeAttributeNS(ns2, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns2, attr3, el) {
    if (ns2 != null) {
      return el.hasAttributeNS(ns2, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener2(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener2(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name15) {
    return function(doctype) {
      return doctype[name15];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy4 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v2) {
    return halt(v2.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy4("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step2(state3.widget, vdom.value0);
        var res$prime = unStep(function(v2) {
          return mkStep(new Step(v2.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v2) {
    var parent2 = parentNode(v2.node);
    return removeChild(v2.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy4("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v2) {
    var parent2 = parentNode(v2.node);
    removeChild(v2.node, parent2);
    forInE(v2.children, function(v1, s) {
      return halt(s);
    });
    return halt(v2.attrs);
  };
  var haltElem = function(v2) {
    var parent2 = parentNode(v2.node);
    removeChild(v2.node, parent2);
    forEachE(v2.children, halt);
    return halt(v2.attrs);
  };
  var eqElemSpec = function(ns1, v2, ns2, v1) {
    var $63 = v2 === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy4("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v2 = length(vdom.value3);
        var v1 = length(state3.children);
        if (v1 === 0 && v2 === 0) {
          var attrs2 = step2(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v22, s) {
          return halt(s);
        };
        var onThese = function(ix, s, v22) {
          var res = step2(s, v22);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix, v22) {
          var res = state3.build(v22);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step2(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy4("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v2 = length(vdom.value3);
        if (state3.length === 0 && v2 === 0) {
          var attrs2 = step2(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v22, s) {
          return halt(s);
        };
        var onThese = function(v22, ix$prime, s, v3) {
          var res = step2(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v22, ix, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step2(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v2, build, w) {
    var res = v2.buildWidget(v2)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v2, build, s) {
    var node = createTextNode(s, v2.document);
    var state3 = {
      build,
      node,
      value: s
    };
    return mkStep(new Step(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v2, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v2.document);
    var node = toNode2(el);
    var onChild = function(v1, ix, v22) {
      var res = build(v22.value1);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v2.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length(ch1)
    };
    return mkStep(new Step(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v2, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v2.document);
    var node = toNode2(el);
    var onChild = function(ix, child) {
      var res = build(child);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v2.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy4("build", "Halogen.VDom.DOM", function() {
      return function(v2) {
        if (v2 instanceof Text) {
          return buildText(spec, $lazy_build(59), v2.value0);
        }
        ;
        if (v2 instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v2.value0, v2.value1, v2.value2, v2.value3);
        }
        ;
        if (v2 instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v2.value0, v2.value1, v2.value2, v2.value3);
        }
        ;
        if (v2 instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v2.value0);
        }
        ;
        if (v2 instanceof Grafted) {
          return $lazy_build(63)(runGraft(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v2.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Foreign/foreign.js
  function typeOf(value12) {
    return typeof value12;
  }
  function tagOf(value12) {
    return Object.prototype.toString.call(value12).slice(8, -1);
  }
  var isArray = Array.isArray || function(value12) {
    return Object.prototype.toString.call(value12) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber = function(n) {
    return n;
  };

  // output/Data.Number/foreign.js
  var isFiniteImpl = isFinite;
  var floor = Math.floor;

  // output/Data.Int/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();
  var unsafeClamp = function(x8) {
    if (!isFiniteImpl(x8)) {
      return 0;
    }
    ;
    if (x8 >= toNumber(top2)) {
      return top2;
    }
    ;
    if (x8 <= toNumber(bottom2)) {
      return bottom2;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x8));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x8.constructor.name]);
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };

  // output/Data.List.NonEmpty/index.js
  var singleton4 = /* @__PURE__ */ function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var cons = function(y8) {
    return function(v2) {
      return new NonEmpty(y8, new Cons(v2.value0, v2.value1));
    };
  };

  // output/Foreign/index.js
  var TypeMismatch = /* @__PURE__ */ function() {
    function TypeMismatch2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch2.create = function(value0) {
      return function(value1) {
        return new TypeMismatch2(value0, value1);
      };
    };
    return TypeMismatch2;
  }();
  var unsafeToForeign = unsafeCoerce2;
  var unsafeFromForeign = unsafeCoerce2;
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton4($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure13 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value12) {
        if (tagOf(value12) === tag) {
          return pure13(unsafeFromForeign(value12));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value12)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value12.constructor.name]);
      };
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Foreign.Object/foreign.js
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r5 = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r5.push(f(k)(m[k]));
        }
      }
      return r5;
    };
  }
  var keys3 = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Foreign.Object/index.js
  var lookup2 = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy5 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key, el) {
    var v2 = hasAttribute(nullImpl, key, el);
    if (v2) {
      return removeAttribute(nullImpl, key, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key, el));
    if (v1 === "string") {
      return unsafeSetAny(key, "", el);
    }
    ;
    if (key === "rowSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    if (key === "colSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    return unsafeSetAny(key, jsUndefined, el);
  };
  var propToStrKey = function(v2) {
    if (v2 instanceof Attribute && v2.value0 instanceof Just) {
      return "attr/" + (v2.value0.value0 + (":" + v2.value1));
    }
    ;
    if (v2 instanceof Attribute) {
      return "attr/:" + v2.value1;
    }
    ;
    if (v2 instanceof Property) {
      return "prop/" + v2.value0;
    }
    ;
    if (v2 instanceof Handler) {
      return "handler/" + v2.value0;
    }
    ;
    if (v2 instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v2.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v2, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler2 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener2(v1.value0, fst(handler2), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v2) {
        if (v2 instanceof Just) {
          return emit(v2.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v2 = lookup2("ref")(state3.props);
        if (v2 instanceof Just && v2.value0 instanceof Ref) {
          return mbEmit(v2.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v2, v1, v11, v22) {
          if (v11 instanceof Attribute && v22 instanceof Attribute) {
            var $66 = v11.value2 === v22.value2;
            if ($66) {
              return v22;
            }
            ;
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v11 instanceof Property && v22 instanceof Property) {
            var v4 = refEq2(v11.value1, v22.value1);
            if (v4) {
              return v22;
            }
            ;
            if (v22.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v22.value1);
              if ($75) {
                return v22;
              }
              ;
              setProperty(v22.value0, v22.value1, el);
              return v22;
            }
            ;
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v11 instanceof Handler && v22 instanceof Handler) {
            var handler2 = unsafeLookup(v22.value0, prevEvents);
            write(v22.value1)(snd(handler2))();
            pokeMutMap(v22.value0, handler2, events);
            return v22;
          }
          ;
          return v22;
        };
      };
      var applyProp = function(events) {
        return function(v2, v1, v22) {
          if (v22 instanceof Attribute) {
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v22 instanceof Property) {
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v22 instanceof Handler) {
            var v3 = unsafeGetAny(v22.value0, events);
            if (unsafeHasAny(v22.value0, events)) {
              write(v22.value1)(snd(v3))();
              return v22;
            }
            ;
            var ref2 = $$new(v22.value1)();
            var listener = eventListener(function(ev) {
              return function __do2() {
                var f$prime = read(ref2)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v22.value0, new Tuple(listener, ref2), events);
            addEventListener2(v22.value0, listener, el);
            return v22;
          }
          ;
          if (v22 instanceof Ref) {
            mbEmit(v22.value0(new Created(el)));
            return v22;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v22.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy5("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x8) {
    return x8;
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v2) {
      var $31 = Property.create(v2);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns2) {
    return function(name15) {
      return function(props) {
        return function(children2) {
          return new Elem(ns2, name15, props, children2);
        };
      };
    };
  };
  var attr = function(ns2) {
    return function(v2) {
      return Attribute.create(ns2)(v2);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure9 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure9(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply2 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply2(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x8) {
        return mkAp(new Pure(f))(x8);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure9 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z2) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v2) {
            if (v2.value1.value0 instanceof Pure) {
              var v1 = goApply1(v2.value0)(v2.value1.value1)(pure9(v2.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v2.value1.value0 instanceof Lift) {
              var v1 = goApply1(v2.value0)(v2.value1.value1)(nat(v2.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v2.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v2.value1.value0.value1, v2.value1.value1);
              $copy_v = goLeft1(v2.value0)(nextVals)(nat)(v2.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v2.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton4(z2)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity5);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  }();
  var uncons2 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v2) {
      if (v2.value0 instanceof Nil && v2.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v2.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse2(v2.value1), Nil.value);
        return;
      }
      ;
      if (v2.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v2.value0.value0, new CatQueue(v2.value0.value1, v2.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v2.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc2 = function(v2) {
    return function(a3) {
      return new CatQueue(v2.value0, new Cons(a3, v2.value1));
    };
  };
  var $$null2 = function(v2) {
    if (v2.value0 instanceof Nil && v2.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  }();
  var link = function(v2) {
    return function(v1) {
      if (v2 instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v2;
      }
      ;
      if (v2 instanceof CatCons) {
        return new CatCons(v2.value0, snoc2(v2.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v2.constructor.name, v1.constructor.name]);
    };
  };
  var foldr4 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl3 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v2, v1, v22) {
                if (v22 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v22 instanceof Cons) {
                  $tco_var_v = v2;
                  $tco_var_v1 = v2(v1)(v22.value0);
                  $copy_v2 = v22.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v2.constructor.name, v1.constructor.name, v22.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v2 = uncons2(xs);
              if (v2 instanceof Nothing) {
                $tco_done1 = true;
                return foldl3(function(x8) {
                  return function(i2) {
                    return i2(x8);
                  };
                })(b2)(ys);
              }
              ;
              if (v2 instanceof Just) {
                $tco_var_xs = v2.value0.value1;
                $copy_ys = new Cons(k(v2.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons3 = function(v2) {
    if (v2 instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v2 instanceof CatCons) {
      return new Just(new Tuple(v2.value0, function() {
        var $66 = $$null2(v2.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr4(link)(CatNil.value)(v2.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v2.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append2 = link;
  var semigroupCatList = {
    append: append2
  };
  var snoc3 = function(cat) {
    return function(a3) {
      return append2(cat)(new CatCons(a3, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy6 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var append3 = /* @__PURE__ */ append(semigroupCatList);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v2) {
      var runExpF = function(v23) {
        return v23;
      };
      var concatF = function(v23) {
        return function(r5) {
          return new Free(v23.value0, append3(v23.value1)(r5));
        };
      };
      if (v2.value0 instanceof Return) {
        var v22 = uncons3(v2.value1);
        if (v22 instanceof Nothing) {
          $tco_done = true;
          return new Return(v2.value0.value0);
        }
        ;
        if (v22 instanceof Just) {
          $copy_v = concatF(runExpF(v22.value0.value0)(v2.value0.value0))(v22.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v22.constructor.name]);
      }
      ;
      if (v2.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v2.value0.value0, function(a3) {
          return concatF(v2.value0.value1(a3))(v2.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v2.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        }())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v2) {
      return function(k) {
        return new Free(v2.value0, snoc3(v2.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var pure4 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure4($192);
    }));
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map110 = map(Monad0.Bind1().Apply0().Functor0());
    var pure13 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v2 = toView(f);
        if (v2 instanceof Return) {
          return map110(Done.create)(pure13(v2.value0));
        }
        ;
        if (v2 instanceof Bind) {
          return map110(function($199) {
            return Loop.create(v2.value1($199));
          })(k(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v2.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var unChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a3) {
    return function(b2) {
      return a3 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void4 = /* @__PURE__ */ $$void(functorEffect);
  var bind3 = /* @__PURE__ */ bind(bindEffect);
  var append4 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v2) {
    return v2;
  };
  var subscribe = function(v2) {
    return function(k) {
      return v2(function($76) {
        return $$void4(k($76));
      });
    };
  };
  var notify = function(v2) {
    return function(a3) {
      return v2(a3);
    };
  };
  var create3 = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do2() {
          modify_2(function(v2) {
            return append4(v2)([k]);
          })(subscribers)();
          return modify_2(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a3) {
        return bind3(read(subscribers))(traverse_1(function(k) {
          return k(a3);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var SubscriptionId = function(x8) {
    return x8;
  };
  var ForkId = function(x8) {
    return x8;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise2.create = function(value0) {
      return function(value1) {
        return new Raise2(value0, value1);
      };
    };
    return Raise2;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  }();
  var HalogenM = function(x8) {
    return x8;
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var functorHalogenM = freeFunctor;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize2(value0) {
      this.value0 = value0;
    }
    ;
    Initialize2.create = function(value0) {
      return new Initialize2(value0);
    };
    return Initialize2;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize2(value0) {
      this.value0 = value0;
    }
    ;
    Finalize2.create = function(value0) {
      return new Finalize2(value0);
    };
    return Finalize2;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive2.create = function(value0) {
      return function(value1) {
        return new Receive2(value0, value1);
      };
    };
    return Receive2;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query2.create = function(value0) {
      return function(value1) {
        return new Query2(value0, value1);
      };
    };
    return Query2;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy7 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var unsafeEqThunk = function(v2, v1) {
    return refEq2(v2.value0, v1.value0) && (refEq2(v2.value1, v1.value1) && v2.value1(v2.value3, v1.value3));
  };
  var runThunk = function(v2) {
    return v2.value2(v2.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy7("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step2(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map10 = /* @__PURE__ */ map(functorHalogenM);
  var pure5 = /* @__PURE__ */ pure(applicativeHalogenM);
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v2) {
      if (v2 instanceof Initialize) {
        return voidLeft2(traverse_3(args.handleAction)(args.initialize))(v2.value0);
      }
      ;
      if (v2 instanceof Finalize) {
        return voidLeft2(traverse_3(args.handleAction)(args.finalize))(v2.value0);
      }
      ;
      if (v2 instanceof Receive) {
        return voidLeft2(traverse_3(args.handleAction)(args.receive(v2.value0)))(v2.value1);
      }
      ;
      if (v2 instanceof Action2) {
        return voidLeft2(args.handleAction(v2.value0))(v2.value1);
      }
      ;
      if (v2 instanceof Query) {
        return unCoyoneda(function(g2) {
          var $45 = map10(maybe(v2.value1(unit))(g2));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v2.constructor.name]);
    };
  };
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure5(unit)),
      handleQuery: $$const(pure5(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();

  // output/Halogen.HTML.Elements/index.js
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var h1 = /* @__PURE__ */ element2("h1");
  var h1_ = /* @__PURE__ */ h1([]);
  var h2 = /* @__PURE__ */ element2("h2");
  var h2_ = /* @__PURE__ */ h2([]);
  var img = function(props) {
    return element2("img")(props)([]);
  };
  var option = /* @__PURE__ */ element2("option");
  var option_ = /* @__PURE__ */ option([]);
  var p = /* @__PURE__ */ element2("p");
  var p_ = /* @__PURE__ */ p([]);
  var select3 = /* @__PURE__ */ element2("select");
  var style = /* @__PURE__ */ element2("style");
  var style_ = /* @__PURE__ */ style([]);
  var table = /* @__PURE__ */ element2("table");
  var table_ = /* @__PURE__ */ table([]);
  var tbody = /* @__PURE__ */ element2("tbody");
  var tbody_ = /* @__PURE__ */ tbody([]);
  var td = /* @__PURE__ */ element2("td");
  var td_ = /* @__PURE__ */ td([]);
  var th = /* @__PURE__ */ element2("th");
  var th_ = /* @__PURE__ */ th([]);
  var thead = /* @__PURE__ */ element2("thead");
  var thead_ = /* @__PURE__ */ thead([]);
  var tr = /* @__PURE__ */ element2("tr");
  var tr_ = /* @__PURE__ */ tr([]);
  var div2 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div2([]);

  // output/Control.Monad.Except/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap2(runExceptT($3));
  };

  // output/Foreign.Index/foreign.js
  function unsafeReadPropImpl(f, s, key, value12) {
    return value12 == null ? f : s(value12[key]);
  }

  // output/Foreign.Index/index.js
  var unsafeReadProp = function(dictMonad) {
    var fail2 = fail(dictMonad);
    var pure9 = pure(applicativeExceptT(dictMonad));
    return function(k) {
      return function(value12) {
        return unsafeReadPropImpl(fail2(new TypeMismatch("object", typeOf(value12))), pure9, k, value12);
      };
    };
  };
  var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
  };

  // output/Web.Event.Event/foreign.js
  function _currentTarget(e) {
    return e.currentTarget;
  }

  // output/Web.Event.Event/index.js
  var currentTarget = function($5) {
    return toMaybe(_currentTarget($5));
  };

  // output/Halogen.HTML.Events/index.js
  var map11 = /* @__PURE__ */ map(functorMaybe);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var readProp2 = /* @__PURE__ */ readProp(monadIdentity);
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var handler$prime = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return map11(Action.create)(f(ev));
      });
    };
  };
  var addForeignPropHandler = function(key) {
    return function(prop3) {
      return function(reader) {
        return function(f) {
          var go2 = function(a3) {
            return composeKleisliFlipped3(reader)(readProp2(prop3))(unsafeToForeign(a3));
          };
          return handler$prime(key)(composeKleisli2(currentTarget)(function(e) {
            return either($$const(Nothing.value))(function($85) {
              return Just.create(f($85));
            })(runExcept(go2(e)));
          }));
        };
      };
    };
  };
  var onValueChange = /* @__PURE__ */ addForeignPropHandler(change)("value")(readString2);

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Effect.Console/foreign.js
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Halogen.HTML.Properties/index.js
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var prop22 = /* @__PURE__ */ prop2(isPropString);
  var src9 = /* @__PURE__ */ prop22("src");
  var attr2 = /* @__PURE__ */ function() {
    return attr(Nothing.value);
  }();
  var style2 = /* @__PURE__ */ attr2("style");

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_7(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v2) {
      return f(v2);
    };
  };
  var initDriverState = function(component2) {
    return function(input3) {
      return function(handler2) {
        return function(lchs) {
          return function __do2() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty3)();
            var childrenOut = $$new(empty3)();
            var handlerRef = $$new(handler2)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty2))();
            var forks = $$new(empty2)();
            var ds = {
              component: component2,
              state: component2.initialState(input3),
              refs: empty2,
              children: empty3,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup4 = /* @__PURE__ */ lookup(ordSubscriptionId);
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard3 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard3(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var pure6 = /* @__PURE__ */ pure(applicativeAff);
  var map14 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel3 = /* @__PURE__ */ parallel(parallelAff);
  var map15 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map22 = /* @__PURE__ */ map(functorMaybe);
  var insert3 = /* @__PURE__ */ insert(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete2 = /* @__PURE__ */ $$delete(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert1 = /* @__PURE__ */ insert(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup1 = /* @__PURE__ */ lookup(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref2) {
      return function __do2() {
        var v2 = read(ref2)();
        var subs = read(v2.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped5(lookup4(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref2) {
    return function(au) {
      return bind12(liftEffect4(read(ref2)))(function(v2) {
        if (v2 instanceof Nothing) {
          return au;
        }
        ;
        if (v2 instanceof Just) {
          return liftEffect4(write(new Just(new Cons(au, v2.value0)))(ref2));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v2.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard1(liftEffect4(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind12(liftEffect4(f))(function(result) {
          return bind12(liftEffect4(read(lchs)))(function(v2) {
            return discard1(traverse_22(fork3)(v2.finalizers))(function() {
              return discard1(parSequence_2(v2.initializers))(function() {
                return pure6(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref2) {
      return bind12(liftEffect4(read(ref2)))(function(v2) {
        return liftEffect4(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v2.fresh));
      });
    };
  };
  var evalQ = function(render) {
    return function(ref2) {
      return function(q2) {
        return bind12(liftEffect4(read(ref2)))(function(v2) {
          return evalM(render)(ref2)(v2["component"]["eval"](new Query(map14(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render) {
    return function(initRef) {
      return function(v2) {
        var evalChildQuery = function(ref2) {
          return function(cqb) {
            return bind12(liftEffect4(read(ref2)))(function(v1) {
              return unChildQueryBox(function(v22) {
                var evalChild = function(v3) {
                  return parallel3(bind12(liftEffect4(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render)(ds.selfRef)(v22.value1);
                    })(dsx);
                  }));
                };
                return map15(v22.value2)(sequential2(v22.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref2) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind12(liftEffect4(read(ref2)))(function(v22) {
                var v3 = v1.value0(v22.state);
                if (unsafeRefEq(v22.state)(v3.value1)) {
                  return pure6(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect4(write({
                    component: v22.component,
                    refs: v22.refs,
                    children: v22.children,
                    childrenIn: v22.childrenIn,
                    childrenOut: v22.childrenOut,
                    selfRef: v22.selfRef,
                    handlerRef: v22.handlerRef,
                    pendingQueries: v22.pendingQueries,
                    pendingOuts: v22.pendingOuts,
                    pendingHandlers: v22.pendingHandlers,
                    rendering: v22.rendering,
                    fresh: v22.fresh,
                    subscriptions: v22.subscriptions,
                    forks: v22.forks,
                    lifecycleHandlers: v22.lifecycleHandlers,
                    state: v3.value1
                  })(ref2)))(function() {
                    return discard1(handleLifecycle(v22.lifecycleHandlers)(render(v22.lifecycleHandlers)(ref2)))(function() {
                      return pure6(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind12(fresh(SubscriptionId)(ref2))(function(sid) {
                return bind12(liftEffect4(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render)(ref2)(new Action(act)));
                })))(function(finalize) {
                  return bind12(liftEffect4(read(ref2)))(function(v22) {
                    return discard1(liftEffect4(modify_2(map22(insert3(sid)(finalize)))(v22.subscriptions)))(function() {
                      return pure6(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect4(unsubscribe3(v1.value0)(ref2)))(function() {
                return pure6(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref2)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind12(liftEffect4(read(ref2)))(function(v22) {
                return bind12(liftEffect4(read(v22.handlerRef)))(function(handler2) {
                  return discard1(queueOrRun(v22.pendingOuts)(handler2(v1.value0)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $119 = evalM(render)(ref2);
                return function($120) {
                  return parallel3($119($120));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind12(fresh(ForkId)(ref2))(function(fid) {
                return bind12(liftEffect4(read(ref2)))(function(v22) {
                  return bind12(liftEffect4($$new(false)))(function(doneRef) {
                    return bind12(fork3($$finally(liftEffect4(function __do2() {
                      modify_2($$delete2(fid))(v22.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render)(ref2)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect4(unlessM2(read(doneRef))(modify_2(insert1(fid)(fiber))(v22.forks))))(function() {
                        return pure6(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind12(liftEffect4(read(ref2)))(function(v22) {
                return bind12(liftEffect4(read(v22.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup1(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind12(liftEffect4(read(ref2)))(function(v22) {
                return bind12(liftEffect4(read(v22.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup1(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind12(liftEffect4(read(ref2)))(function(v22) {
                return pure6(v1.value1(lookup22(v1.value0)(v22.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v2);
      };
    };
  };
  var evalF = function(render) {
    return function(ref2) {
      return function(v2) {
        if (v2 instanceof RefUpdate) {
          return liftEffect4(flip(modify_2)(ref2)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v2.value1))(v2.value0)(st.refs)
            };
          })));
        }
        ;
        if (v2 instanceof Action) {
          return bind12(liftEffect4(read(ref2)))(function(v1) {
            return evalM(render)(ref2)(v1["component"]["eval"](new Action2(v2.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v2.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind4 = /* @__PURE__ */ bind(bindEffect);
  var discard4 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard4(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure7 = /* @__PURE__ */ pure(applicativeEffect);
  var map16 = /* @__PURE__ */ map(functorEffect);
  var pure12 = /* @__PURE__ */ pure(applicativeAff);
  var when2 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void5 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind13 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref2) {
    return function __do2() {
      var queue = read(ref2)();
      write(Nothing.value)(ref2)();
      return for_2(queue)(function() {
        var $59 = traverse_5(fork4);
        return function($60) {
          return handleAff($59(reverse2($60)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v2) {
    return function __do2() {
      bindFlipped6(traverse_23(traverse_33(unsubscribe)))(read(v2.subscriptions))();
      write(Nothing.value)(v2.subscriptions)();
      bindFlipped6(traverse_33(function() {
        var $61 = killFiber(error("finalized"));
        return function($62) {
          return handleAff($61($62));
        };
      }()))(read(v2.forks))();
      return write(empty2)(v2.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component2) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_2(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_3(reverse2(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect5(function __do2() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler2) {
            return function(j) {
              return unComponent(function(c) {
                return function __do2() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler2)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped6(unDriverStateX(function() {
                    var $63 = render(lchs);
                    return function($64) {
                      return $63(function(v2) {
                        return v2.selfRef;
                      }($64));
                    };
                  }()))(read($$var2))();
                  bindFlipped6(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler2) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot) {
                  return function __do2() {
                    var childrenIn = map16(slot.pop)(read(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do3() {
                            flip(write)(st.handlerRef)(function() {
                              var $65 = maybe(pure12(unit))(handler2);
                              return function($66) {
                                return $65(slot.output($66));
                              };
                            }())();
                            return handleAff(evalM(render)(st.selfRef)(st["component"]["eval"](new Receive(slot.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $67 = maybe(pure12(unit))(handler2);
                          return function($68) {
                            return $67(slot.output($68));
                          };
                        }())(slot.input)(slot.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map16(function($69) {
                      return isJust(slot.get($69));
                    })(read(childrenOutRef))();
                    when2(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_2(slot.set($$var2))(childrenOutRef)();
                    return bind4(read($$var2))(renderStateX2(function(v2) {
                      if (v2 instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v2 instanceof Just) {
                        return pure7(renderSpec2.renderChild(v2.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v2.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render = function(lchs) {
          return function($$var2) {
            return function __do2() {
              var v2 = read($$var2)();
              var shouldProcessHandlers = map16(isNothing)(read(v2.pendingHandlers))();
              when2(shouldProcessHandlers)(write(new Just(Nil.value))(v2.pendingHandlers))();
              write(empty3)(v2.childrenOut)();
              write(v2.children)(v2.childrenIn)();
              var handler2 = function() {
                var $70 = queueOrRun(v2.pendingHandlers);
                var $71 = evalF(render)(v2.selfRef);
                return function($72) {
                  return $70($$void5($71($72)));
                };
              }();
              var childHandler = function() {
                var $73 = queueOrRun(v2.pendingQueries);
                return function($74) {
                  return $73(handler2(Action.create($74)));
                };
              }();
              var rendering = renderSpec2.render(function($75) {
                return handleAff(handler2($75));
              })(renderChild(lchs)(childHandler)(v2.childrenIn)(v2.childrenOut))(v2.component.render(v2.state))(v2.rendering)();
              var children2 = read(v2.childrenOut)();
              var childrenIn = read(v2.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do3() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_2)(v2.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when2(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do3() {
                  var handlers = read(v2.pendingHandlers)();
                  write(new Just(Nil.value))(v2.pendingHandlers)();
                  traverse_23(function() {
                    var $76 = traverse_5(fork4);
                    return function($77) {
                      return handleAff($76(reverse2($77)));
                    };
                  }())(handlers)();
                  var mmore = read(v2.pendingHandlers)();
                  var $52 = maybe(false)($$null)(mmore);
                  if ($52) {
                    return voidLeft3(write(Nothing.value)(v2.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do2() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_2(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v2) {
                return function __do3() {
                  var dsx = read(v2)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref2) {
            return function(q2) {
              return bind13(liftEffect5(read(disposed)))(function(v2) {
                if (v2) {
                  return pure12(Nothing.value);
                }
                ;
                return evalQ(render)(ref2)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do2() {
                var v2 = read(disposed)();
                if (v2) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do3() {
                    var v22 = liftEffect1(read(v1.selfRef))();
                    return for_2(v22.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind13(liftEffect5(newLifecycleHandlers))(function(lchs) {
          return bind13(liftEffect5($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do2() {
              var sio = create3();
              var dsx = bindFlipped6(read)(runComponent(lchs)(function() {
                var $78 = notify(sio.listener);
                return function($79) {
                  return liftEffect5($78($79));
                };
              }())(i2)(component2))();
              return unDriverStateX(function(st) {
                return pure7({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map17 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map17(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map17(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy8 = function(name15, moduleName, init2) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init2();
      state3 = 2;
      return val;
    };
  };
  var $$void6 = /* @__PURE__ */ $$void(functorEffect);
  var pure8 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap3 = /* @__PURE__ */ unwrap();
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var not2 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var bind14 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map18 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v2) {
    return function(v1) {
      return function(v22) {
        if (v1 instanceof Just && v22 instanceof Just) {
          return $$void6(insertBefore(v2)(v1.value0)(v22.value0));
        }
        ;
        if (v1 instanceof Nothing && v22 instanceof Just) {
          return $$void6(appendChild(v2)(v22.value0));
        }
        ;
        return pure8(unit);
      };
    };
  };
  var removeChild3 = function(v2) {
    return function __do2() {
      var npn = parentNode2(v2.node)();
      return traverse_6(function(pn) {
        return removeChild2(v2.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler2) {
    return function(renderChildRef) {
      return function(document2) {
        var getNode = unRenderStateX(function(v2) {
          return v2.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap3)(spec);
          var $lazy_patch = $runtime_lazy8("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot) {
              if (st instanceof Just) {
                if (slot instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot.value0);
                }
                ;
                if (slot instanceof ThunkSlot) {
                  var step$prime = step2(st.value0, slot.value0);
                  return mkStep(new Step(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot);
            };
          });
          var $lazy_render = $runtime_lazy8("render", "Halogen.VDom.Driver", function() {
            return function(slot) {
              if (slot instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot.value0);
              }
              ;
              if (slot instanceof ThunkSlot) {
                var step3 = buildThunk2(slot.value0);
                return mkStep(new Step(extract2(step3), new Just(step3), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy8("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch = $lazy_patch(91);
          var render = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render;
        };
        var buildAttributes = buildProp(handler2);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document2
        };
      };
    };
  };
  var renderSpec = function(document2) {
    return function(container) {
      var render = function(handler2) {
        return function(child) {
          return function(v2) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do2() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler2)(renderChildRef)(document2);
                  var machine = buildVDom(spec)(v2);
                  var node = extract2(machine);
                  $$void6(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do2() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step2(v1.value0.machine, v2);
                  var newNode = extract2(machine$prime);
                  when3(not2(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render,
        renderChild: identity6,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component2) {
    return function(i2) {
      return function(element4) {
        return bind14(liftEffect6(map18(toDocument)(bindFlipped7(document)(windowImpl))))(function(document2) {
          return runUI(renderSpec(document2)(element4))(component2)(i2);
        });
      };
    };
  };

  // output/Halogen.Svg.Attributes.Animate.Addition/index.js
  var AdditiveSum = /* @__PURE__ */ function() {
    function AdditiveSum2() {
    }
    ;
    AdditiveSum2.value = new AdditiveSum2();
    return AdditiveSum2;
  }();
  var AdditiveReplace = /* @__PURE__ */ function() {
    function AdditiveReplace2() {
    }
    ;
    AdditiveReplace2.value = new AdditiveReplace2();
    return AdditiveReplace2;
  }();
  var showAdditive = {
    show: function(v2) {
      if (v2 instanceof AdditiveSum) {
        return "sum";
      }
      ;
      if (v2 instanceof AdditiveReplace) {
        return "replace";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate.Addition (line 10, column 10 - line 12, column 33): " + [v2.constructor.name]);
    }
  };
  var additive = /* @__PURE__ */ function() {
    var $9 = attr2("additive");
    var $10 = show(showAdditive);
    return function($11) {
      return $9($10($11));
    };
  }();

  // output/Halogen.Svg.Attributes.ContentType.ClockValue/index.js
  var show2 = /* @__PURE__ */ show(showNumber);
  var show1 = /* @__PURE__ */ show(showInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var div1 = /* @__PURE__ */ div(euclideanRingInt);
  var showClockValue = {
    show: function(v2) {
      var paddedSeconds = function() {
        var $29 = v2.seconds < 10;
        if ($29) {
          return "0" + show2(v2.seconds);
        }
        ;
        return show2(v2.seconds);
      }();
      var paddedMinutes = function() {
        var $30 = v2.minutes < 10;
        if ($30) {
          return "0" + show1(v2.minutes);
        }
        ;
        return show1(v2.minutes);
      }();
      var paddedHours = function() {
        var $31 = v2.hours < 10;
        if ($31) {
          return "0" + show1(v2.hours);
        }
        ;
        return show1(v2.hours);
      }();
      return paddedHours + (":" + (paddedMinutes + (":" + paddedSeconds)));
    }
  };
  var seconds = function(dict) {
    return dict.seconds;
  };
  var fullClock = function(h7) {
    return function(m) {
      return function(s) {
        var seconds1 = s - floor(s / 60) * 60;
        var minutes1 = mod2(m)(60) + floor2(s / 60) | 0;
        var hours1 = h7 + div1(m)(60) | 0;
        return {
          hours: hours1,
          minutes: minutes1,
          seconds: seconds1
        };
      };
    };
  };
  var toClockValueInt = {
    hours: function(h7) {
      return fullClock(h7)(0)(0);
    },
    minutes: function(m) {
      return fullClock(0)(m)(0);
    },
    seconds: function(s) {
      return fullClock(0)(0)(toNumber(s));
    },
    milliseconds: function(ms) {
      return fullClock(0)(0)(toNumber(ms) / 1e3);
    }
  };

  // output/Halogen.Svg.Attributes.Animate.Trigger/index.js
  var show12 = /* @__PURE__ */ show(showClockValue);
  var isOffsetValueClockValue = {
    isOffsetValue: show12
  };
  var isOffsetValue = function(dict) {
    return dict.isOffsetValue;
  };
  var isAnimationTriggerClockVa = {
    isAnimationTrigger: /* @__PURE__ */ isOffsetValue(isOffsetValueClockValue)
  };
  var isAnimationTrigger = function(dict) {
    return dict.isAnimationTrigger;
  };

  // output/Halogen.Svg.Attributes.Animate.Timing/index.js
  var show3 = /* @__PURE__ */ show(showClockValue);
  var show13 = /* @__PURE__ */ show(showNumber);
  var TimingFillFreeze = /* @__PURE__ */ function() {
    function TimingFillFreeze2() {
    }
    ;
    TimingFillFreeze2.value = new TimingFillFreeze2();
    return TimingFillFreeze2;
  }();
  var TimingFillRemove = /* @__PURE__ */ function() {
    function TimingFillRemove2() {
    }
    ;
    TimingFillRemove2.value = new TimingFillRemove2();
    return TimingFillRemove2;
  }();
  var RepeatCountIndefinite = /* @__PURE__ */ function() {
    function RepeatCountIndefinite2() {
    }
    ;
    RepeatCountIndefinite2.value = new RepeatCountIndefinite2();
    return RepeatCountIndefinite2;
  }();
  var RepeatCountNumber = /* @__PURE__ */ function() {
    function RepeatCountNumber2(value0) {
      this.value0 = value0;
    }
    ;
    RepeatCountNumber2.create = function(value0) {
      return new RepeatCountNumber2(value0);
    };
    return RepeatCountNumber2;
  }();
  var showTimingFill = {
    show: function(v2) {
      if (v2 instanceof TimingFillFreeze) {
        return "freeze";
      }
      ;
      if (v2 instanceof TimingFillRemove) {
        return "remove";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate.Timing (line 51, column 10 - line 53, column 33): " + [v2.constructor.name]);
    }
  };
  var showRepeatCount = {
    show: function(v2) {
      if (v2 instanceof RepeatCountIndefinite) {
        return "indefinite";
      }
      ;
      if (v2 instanceof RepeatCountNumber) {
        return show13(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate.Timing (line 59, column 10 - line 61, column 44): " + [v2.constructor.name]);
    }
  };
  var isRepeatCountRepeatCount = {
    isRepeatCount: /* @__PURE__ */ show(showRepeatCount)
  };
  var isDurationClockValue = {
    isDuration: show3
  };
  var isRepeatCount = function(dict) {
    return dict.isRepeatCount;
  };
  var repeatCount = function(dictIsRepeatCount) {
    var $55 = attr2("repeatCount");
    var $56 = isRepeatCount(dictIsRepeatCount);
    return function($57) {
      return $55($56($57));
    };
  };
  var isDuration = function(dict) {
    return dict.isDuration;
  };
  var dur = function(dictIsDuration) {
    var $61 = attr2("dur");
    var $62 = isDuration(dictIsDuration);
    return function($63) {
      return $61($62($63));
    };
  };
  var begin = function(dictIsAnimationTrigger) {
    var $64 = attr2("begin");
    var $65 = isAnimationTrigger(dictIsAnimationTrigger);
    return function($66) {
      return $64($65($66));
    };
  };

  // output/Halogen.Svg.Attributes.Animate.Value/index.js
  var to = function(dictShow) {
    var $19 = attr2("to");
    var $20 = show(dictShow);
    return function($21) {
      return $19($20($21));
    };
  };
  var from2 = function(dictShow) {
    var $30 = attr2("from");
    var $31 = show(dictShow);
    return function($32) {
      return $30($31($32));
    };
  };

  // output/Halogen.Svg.Attributes.Path/index.js
  var show4 = /* @__PURE__ */ show(showNumber);
  var Sweep0 = /* @__PURE__ */ function() {
    function Sweep02() {
    }
    ;
    Sweep02.value = new Sweep02();
    return Sweep02;
  }();
  var Sweep1 = /* @__PURE__ */ function() {
    function Sweep12() {
    }
    ;
    Sweep12.value = new Sweep12();
    return Sweep12;
  }();
  var Arc0 = /* @__PURE__ */ function() {
    function Arc02() {
    }
    ;
    Arc02.value = new Arc02();
    return Arc02;
  }();
  var Arc1 = /* @__PURE__ */ function() {
    function Arc12() {
    }
    ;
    Arc12.value = new Arc12();
    return Arc12;
  }();
  var Rel = /* @__PURE__ */ function() {
    function Rel2() {
    }
    ;
    Rel2.value = new Rel2();
    return Rel2;
  }();
  var Abs = /* @__PURE__ */ function() {
    function Abs2() {
    }
    ;
    Abs2.value = new Abs2();
    return Abs2;
  }();
  var M = /* @__PURE__ */ function() {
    function M2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    M2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new M2(value0, value1, value22);
        };
      };
    };
    return M2;
  }();
  var Z = /* @__PURE__ */ function() {
    function Z2(value0) {
      this.value0 = value0;
    }
    ;
    Z2.create = function(value0) {
      return new Z2(value0);
    };
    return Z2;
  }();
  var L = /* @__PURE__ */ function() {
    function L2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    L2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new L2(value0, value1, value22);
        };
      };
    };
    return L2;
  }();
  var H = /* @__PURE__ */ function() {
    function H2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    H2.create = function(value0) {
      return function(value1) {
        return new H2(value0, value1);
      };
    };
    return H2;
  }();
  var V = /* @__PURE__ */ function() {
    function V2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    V2.create = function(value0) {
      return function(value1) {
        return new V2(value0, value1);
      };
    };
    return V2;
  }();
  var C = /* @__PURE__ */ function() {
    function C2(value0, value1, value22, value32, value42, value52, value62) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
    }
    ;
    C2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return new C2(value0, value1, value22, value32, value42, value52, value62);
                };
              };
            };
          };
        };
      };
    };
    return C2;
  }();
  var S = /* @__PURE__ */ function() {
    function S2(value0, value1, value22, value32, value42) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
    }
    ;
    S2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return new S2(value0, value1, value22, value32, value42);
            };
          };
        };
      };
    };
    return S2;
  }();
  var Q = /* @__PURE__ */ function() {
    function Q2(value0, value1, value22, value32, value42) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
    }
    ;
    Q2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return new Q2(value0, value1, value22, value32, value42);
            };
          };
        };
      };
    };
    return Q2;
  }();
  var T = /* @__PURE__ */ function() {
    function T2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    T2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new T2(value0, value1, value22);
        };
      };
    };
    return T2;
  }();
  var A = /* @__PURE__ */ function() {
    function A2(value0, value1, value22, value32, value42, value52, value62, value72) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
      this.value7 = value72;
    }
    ;
    A2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return function(value72) {
                    return new A2(value0, value1, value22, value32, value42, value52, value62, value72);
                  };
                };
              };
            };
          };
        };
      };
    };
    return A2;
  }();
  var eqCommandPositionReferenc = {
    eq: function(x8) {
      return function(y8) {
        if (x8 instanceof Rel && y8 instanceof Rel) {
          return true;
        }
        ;
        if (x8 instanceof Abs && y8 instanceof Abs) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq3 = /* @__PURE__ */ eq(eqCommandPositionReferenc);
  var z = /* @__PURE__ */ function() {
    return $$const(new Z(Rel.value));
  }();
  var v = function(y8) {
    return $$const(new V(y8, Rel.value));
  };
  var printSweepFlag = function(v1) {
    if (v1 instanceof Sweep0) {
      return "0";
    }
    ;
    if (v1 instanceof Sweep1) {
      return "1";
    }
    ;
    throw new Error("Failed pattern match at Halogen.Svg.Attributes.Path (line 102, column 18 - line 104, column 16): " + [v1.constructor.name]);
  };
  var printLargeArcFlag = function(v1) {
    if (v1 instanceof Arc0) {
      return "0";
    }
    ;
    if (v1 instanceof Arc1) {
      return "1";
    }
    ;
    throw new Error("Failed pattern match at Halogen.Svg.Attributes.Path (line 86, column 21 - line 88, column 14): " + [v1.constructor.name]);
  };
  var showPathCommand = {
    show: /* @__PURE__ */ function() {
      var addCommas = joinWith(",");
      return function(v1) {
        if (v1 instanceof M) {
          return function() {
            var $203 = eq3(v1.value2)(Abs.value);
            if ($203) {
              return "M";
            }
            ;
            return "m";
          }() + addCommas([show4(v1.value0), show4(v1.value1)]);
        }
        ;
        if (v1 instanceof Z) {
          var $207 = eq3(v1.value0)(Abs.value);
          if ($207) {
            return "Z";
          }
          ;
          return "z";
        }
        ;
        if (v1 instanceof L) {
          return function() {
            var $209 = eq3(v1.value2)(Abs.value);
            if ($209) {
              return "L";
            }
            ;
            return "l";
          }() + addCommas([show4(v1.value0), show4(v1.value1)]);
        }
        ;
        if (v1 instanceof H) {
          return function() {
            var $213 = eq3(v1.value1)(Abs.value);
            if ($213) {
              return "H";
            }
            ;
            return "h";
          }() + show4(v1.value0);
        }
        ;
        if (v1 instanceof V) {
          return function() {
            var $216 = eq3(v1.value1)(Abs.value);
            if ($216) {
              return "V";
            }
            ;
            return "v";
          }() + show4(v1.value0);
        }
        ;
        if (v1 instanceof C) {
          return function() {
            var $219 = eq3(v1.value6)(Abs.value);
            if ($219) {
              return "C";
            }
            ;
            return "c";
          }() + addCommas([show4(v1.value0), show4(v1.value1), show4(v1.value2), show4(v1.value3), show4(v1.value4), show4(v1.value5)]);
        }
        ;
        if (v1 instanceof S) {
          return function() {
            var $227 = eq3(v1.value4)(Abs.value);
            if ($227) {
              return "S";
            }
            ;
            return "s";
          }() + addCommas([show4(v1.value0), show4(v1.value1), show4(v1.value2), show4(v1.value3)]);
        }
        ;
        if (v1 instanceof Q) {
          return function() {
            var $233 = eq3(v1.value4)(Abs.value);
            if ($233) {
              return "Q";
            }
            ;
            return "q";
          }() + addCommas([show4(v1.value0), show4(v1.value1), show4(v1.value2), show4(v1.value3)]);
        }
        ;
        if (v1 instanceof T) {
          return function() {
            var $239 = eq3(v1.value2)(Abs.value);
            if ($239) {
              return "T";
            }
            ;
            return "t";
          }() + addCommas([show4(v1.value0), show4(v1.value1)]);
        }
        ;
        if (v1 instanceof A) {
          return function() {
            var $243 = eq3(v1.value7)(Abs.value);
            if ($243) {
              return "A";
            }
            ;
            return "a";
          }() + addCommas([show4(v1.value0), show4(v1.value1), show4(v1.value2), printLargeArcFlag(v1.value3), printSweepFlag(v1.value4), show4(v1.value5), show4(v1.value6)]);
        }
        ;
        throw new Error("Failed pattern match at Halogen.Svg.Attributes.Path (line 33, column 10 - line 54, column 98): " + [v1.constructor.name]);
      };
    }()
  };
  var l = function(x8) {
    return function(y8) {
      return $$const(new L(x8, y8, Rel.value));
    };
  };
  var h = function(x8) {
    return $$const(new H(x8, Rel.value));
  };
  var a2 = function(rx3) {
    return function(ry3) {
      return function(rot) {
        return function(arc) {
          return function(sweep) {
            return function(x8) {
              return function(y8) {
                return $$const(new A(rx3, ry3, rot, arc, sweep, x8, y8, Rel.value));
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.Svg.Attributes.Paths/index.js
  var show5 = /* @__PURE__ */ show(showPathCommand);
  var isPathShapeString = {
    isPathShape: /* @__PURE__ */ identity(categoryFn)
  };
  var isPathShapeArrayCommandPo = {
    isPathShape: /* @__PURE__ */ function() {
      var $13 = joinWith(" ");
      var $14 = map(functorArray)(function(c) {
        return show5(c(Abs.value));
      });
      return function($15) {
        return $13($14($15));
      };
    }()
  };
  var pathLength = /* @__PURE__ */ function() {
    var $16 = attr2("pathLength");
    var $17 = show(showNumber);
    return function($18) {
      return $16($17($18));
    };
  }();
  var isPathShape = function(dict) {
    return dict.isPathShape;
  };
  var d = function(dictIsPathShape) {
    var $19 = attr2("d");
    var $20 = isPathShape(dictIsPathShape);
    return function($21) {
      return $19($20($21));
    };
  };

  // output/Halogen.Svg.Attributes.Animate/index.js
  var show6 = /* @__PURE__ */ show(showNumber);
  var TransformTypeTranslate = /* @__PURE__ */ function() {
    function TransformTypeTranslate2() {
    }
    ;
    TransformTypeTranslate2.value = new TransformTypeTranslate2();
    return TransformTypeTranslate2;
  }();
  var TransformTypeScale = /* @__PURE__ */ function() {
    function TransformTypeScale2() {
    }
    ;
    TransformTypeScale2.value = new TransformTypeScale2();
    return TransformTypeScale2;
  }();
  var TransformTypeRotate = /* @__PURE__ */ function() {
    function TransformTypeRotate2() {
    }
    ;
    TransformTypeRotate2.value = new TransformTypeRotate2();
    return TransformTypeRotate2;
  }();
  var TransformTypeSkewX = /* @__PURE__ */ function() {
    function TransformTypeSkewX2() {
    }
    ;
    TransformTypeSkewX2.value = new TransformTypeSkewX2();
    return TransformTypeSkewX2;
  }();
  var TransformTypeSkewY = /* @__PURE__ */ function() {
    function TransformTypeSkewY2() {
    }
    ;
    TransformTypeSkewY2.value = new TransformTypeSkewY2();
    return TransformTypeSkewY2;
  }();
  var AttributeTypeXML = /* @__PURE__ */ function() {
    function AttributeTypeXML2() {
    }
    ;
    AttributeTypeXML2.value = new AttributeTypeXML2();
    return AttributeTypeXML2;
  }();
  var AttributeTypeCSS = /* @__PURE__ */ function() {
    function AttributeTypeCSS2() {
    }
    ;
    AttributeTypeCSS2.value = new AttributeTypeCSS2();
    return AttributeTypeCSS2;
  }();
  var AttributeTypeAuto = /* @__PURE__ */ function() {
    function AttributeTypeAuto2() {
    }
    ;
    AttributeTypeAuto2.value = new AttributeTypeAuto2();
    return AttributeTypeAuto2;
  }();
  var AnimateMotionRotationAuto = /* @__PURE__ */ function() {
    function AnimateMotionRotationAuto2() {
    }
    ;
    AnimateMotionRotationAuto2.value = new AnimateMotionRotationAuto2();
    return AnimateMotionRotationAuto2;
  }();
  var AnimateMotionRotationAutoReverse = /* @__PURE__ */ function() {
    function AnimateMotionRotationAutoReverse2() {
    }
    ;
    AnimateMotionRotationAutoReverse2.value = new AnimateMotionRotationAutoReverse2();
    return AnimateMotionRotationAutoReverse2;
  }();
  var AnimateMotionRotationNumber = /* @__PURE__ */ function() {
    function AnimateMotionRotationNumber2(value0) {
      this.value0 = value0;
    }
    ;
    AnimateMotionRotationNumber2.create = function(value0) {
      return new AnimateMotionRotationNumber2(value0);
    };
    return AnimateMotionRotationNumber2;
  }();
  var showTransformType = {
    show: function(v2) {
      if (v2 instanceof TransformTypeTranslate) {
        return "translate";
      }
      ;
      if (v2 instanceof TransformTypeScale) {
        return "scale";
      }
      ;
      if (v2 instanceof TransformTypeRotate) {
        return "rotate";
      }
      ;
      if (v2 instanceof TransformTypeSkewX) {
        return "skewX";
      }
      ;
      if (v2 instanceof TransformTypeSkewY) {
        return "skewY";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate (line 49, column 10 - line 54, column 34): " + [v2.constructor.name]);
    }
  };
  var showAttributeType = {
    show: function(v2) {
      if (v2 instanceof AttributeTypeXML) {
        return "XML";
      }
      ;
      if (v2 instanceof AttributeTypeCSS) {
        return "CSS";
      }
      ;
      if (v2 instanceof AttributeTypeAuto) {
        return "auto";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate (line 32, column 10 - line 35, column 32): " + [v2.constructor.name]);
    }
  };
  var showAnimateMotionRotation = {
    show: function(v2) {
      if (v2 instanceof AnimateMotionRotationAuto) {
        return "auto";
      }
      ;
      if (v2 instanceof AnimateMotionRotationAutoReverse) {
        return "auto-reverse";
      }
      ;
      if (v2 instanceof AnimateMotionRotationNumber) {
        return show6(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Animate (line 63, column 10 - line 66, column 54): " + [v2.constructor.name]);
    }
  };
  var hasAutoAnimateMotionRotat = /* @__PURE__ */ function() {
    return {
      auto: AnimateMotionRotationAuto.value
    };
  }();
  var path = function(dictIsPathShape) {
    var $17 = attr2("path");
    var $18 = isPathShape(dictIsPathShape);
    return function($19) {
      return $17($18($19));
    };
  };
  var attributeType = /* @__PURE__ */ function() {
    var $20 = attr2("attributeType");
    var $21 = show(showAttributeType);
    return function($22) {
      return $20($21($22));
    };
  }();
  var attributeName = /* @__PURE__ */ attr2("attributeName");

  // output/Halogen.Svg.Attributes.ContentType.Color/index.js
  var show7 = /* @__PURE__ */ show(showInt);
  var show14 = /* @__PURE__ */ show(showNumber);
  var RGB = /* @__PURE__ */ function() {
    function RGB2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    RGB2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new RGB2(value0, value1, value22);
        };
      };
    };
    return RGB2;
  }();
  var RGBA = /* @__PURE__ */ function() {
    function RGBA2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    RGBA2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new RGBA2(value0, value1, value22, value32);
          };
        };
      };
    };
    return RGBA2;
  }();
  var Named = /* @__PURE__ */ function() {
    function Named2(value0) {
      this.value0 = value0;
    }
    ;
    Named2.create = function(value0) {
      return new Named2(value0);
    };
    return Named2;
  }();
  var NoColor = /* @__PURE__ */ function() {
    function NoColor2() {
    }
    ;
    NoColor2.value = new NoColor2();
    return NoColor2;
  }();
  var showColor = {
    show: function(v2) {
      if (v2 instanceof RGB) {
        return "rgb(" + (show7(v2.value0) + ("," + (show7(v2.value1) + ("," + (show7(v2.value2) + ")")))));
      }
      ;
      if (v2 instanceof RGBA) {
        return "rgba(" + (show7(v2.value0) + ("," + (show7(v2.value1) + ("," + (show7(v2.value2) + ("," + (show14(v2.value3) + ")")))))));
      }
      ;
      if (v2 instanceof Named) {
        return v2.value0;
      }
      ;
      if (v2 instanceof NoColor) {
        return "None";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.ContentType.Color (line 16, column 10 - line 20, column 22): " + [v2.constructor.name]);
    }
  };

  // output/Halogen.Svg.Attributes.ContentType.Length/index.js
  var show8 = /* @__PURE__ */ show(showNumber);
  var Cm = /* @__PURE__ */ function() {
    function Cm2(value0) {
      this.value0 = value0;
    }
    ;
    Cm2.create = function(value0) {
      return new Cm2(value0);
    };
    return Cm2;
  }();
  var Mm = /* @__PURE__ */ function() {
    function Mm2(value0) {
      this.value0 = value0;
    }
    ;
    Mm2.create = function(value0) {
      return new Mm2(value0);
    };
    return Mm2;
  }();
  var Inches = /* @__PURE__ */ function() {
    function Inches2(value0) {
      this.value0 = value0;
    }
    ;
    Inches2.create = function(value0) {
      return new Inches2(value0);
    };
    return Inches2;
  }();
  var Px = /* @__PURE__ */ function() {
    function Px2(value0) {
      this.value0 = value0;
    }
    ;
    Px2.create = function(value0) {
      return new Px2(value0);
    };
    return Px2;
  }();
  var Pt = /* @__PURE__ */ function() {
    function Pt2(value0) {
      this.value0 = value0;
    }
    ;
    Pt2.create = function(value0) {
      return new Pt2(value0);
    };
    return Pt2;
  }();
  var Pc = /* @__PURE__ */ function() {
    function Pc2(value0) {
      this.value0 = value0;
    }
    ;
    Pc2.create = function(value0) {
      return new Pc2(value0);
    };
    return Pc2;
  }();
  var Em = /* @__PURE__ */ function() {
    function Em2(value0) {
      this.value0 = value0;
    }
    ;
    Em2.create = function(value0) {
      return new Em2(value0);
    };
    return Em2;
  }();
  var Ex = /* @__PURE__ */ function() {
    function Ex2(value0) {
      this.value0 = value0;
    }
    ;
    Ex2.create = function(value0) {
      return new Ex2(value0);
    };
    return Ex2;
  }();
  var Rem = /* @__PURE__ */ function() {
    function Rem2(value0) {
      this.value0 = value0;
    }
    ;
    Rem2.create = function(value0) {
      return new Rem2(value0);
    };
    return Rem2;
  }();
  var Vw = /* @__PURE__ */ function() {
    function Vw2(value0) {
      this.value0 = value0;
    }
    ;
    Vw2.create = function(value0) {
      return new Vw2(value0);
    };
    return Vw2;
  }();
  var Vh = /* @__PURE__ */ function() {
    function Vh2(value0) {
      this.value0 = value0;
    }
    ;
    Vh2.create = function(value0) {
      return new Vh2(value0);
    };
    return Vh2;
  }();
  var Vmin = /* @__PURE__ */ function() {
    function Vmin2(value0) {
      this.value0 = value0;
    }
    ;
    Vmin2.create = function(value0) {
      return new Vmin2(value0);
    };
    return Vmin2;
  }();
  var Vmax = /* @__PURE__ */ function() {
    function Vmax2(value0) {
      this.value0 = value0;
    }
    ;
    Vmax2.create = function(value0) {
      return new Vmax2(value0);
    };
    return Vmax2;
  }();
  var Pct = /* @__PURE__ */ function() {
    function Pct2(value0) {
      this.value0 = value0;
    }
    ;
    Pct2.create = function(value0) {
      return new Pct2(value0);
    };
    return Pct2;
  }();
  var NoCSSLength = /* @__PURE__ */ function() {
    function NoCSSLength2() {
    }
    ;
    NoCSSLength2.value = new NoCSSLength2();
    return NoCSSLength2;
  }();
  var showLength = {
    show: function(v2) {
      if (v2 instanceof Cm) {
        return show8(v2.value0) + "cm";
      }
      ;
      if (v2 instanceof Mm) {
        return show8(v2.value0) + "mm";
      }
      ;
      if (v2 instanceof Inches) {
        return show8(v2.value0) + "in";
      }
      ;
      if (v2 instanceof Px) {
        return show8(v2.value0) + "px";
      }
      ;
      if (v2 instanceof Pt) {
        return show8(v2.value0) + "pt";
      }
      ;
      if (v2 instanceof Pc) {
        return show8(v2.value0) + "pc";
      }
      ;
      if (v2 instanceof Em) {
        return show8(v2.value0) + "em";
      }
      ;
      if (v2 instanceof Ex) {
        return show8(v2.value0) + "ex";
      }
      ;
      if (v2 instanceof Rem) {
        return show8(v2.value0) + "rem";
      }
      ;
      if (v2 instanceof Vw) {
        return show8(v2.value0) + "vw";
      }
      ;
      if (v2 instanceof Vh) {
        return show8(v2.value0) + "vh";
      }
      ;
      if (v2 instanceof Vmin) {
        return show8(v2.value0) + "vmin";
      }
      ;
      if (v2 instanceof Vmax) {
        return show8(v2.value0) + "vmax";
      }
      ;
      if (v2 instanceof Pct) {
        return show8(v2.value0) + "%";
      }
      ;
      if (v2 instanceof NoCSSLength) {
        return "0";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.ContentType.Length (line 31, column 10 - line 46, column 23): " + [v2.constructor.name]);
    }
  };

  // output/Halogen.Svg.Attributes.ContentType.URL/index.js
  var showURL = {
    show: function(v2) {
      return v2;
    }
  };

  // output/Halogen.Svg.Attributes.ContentType.Paint/index.js
  var show9 = /* @__PURE__ */ show(showURL);
  var foldMap3 = /* @__PURE__ */ foldMap(foldableMaybe)(monoidString);
  var show15 = /* @__PURE__ */ show(showColor);
  var PaintNone = /* @__PURE__ */ function() {
    function PaintNone2() {
    }
    ;
    PaintNone2.value = new PaintNone2();
    return PaintNone2;
  }();
  var PaintUrl = /* @__PURE__ */ function() {
    function PaintUrl2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    PaintUrl2.create = function(value0) {
      return function(value1) {
        return new PaintUrl2(value0, value1);
      };
    };
    return PaintUrl2;
  }();
  var PaintColor = /* @__PURE__ */ function() {
    function PaintColor2(value0) {
      this.value0 = value0;
    }
    ;
    PaintColor2.create = function(value0) {
      return new PaintColor2(value0);
    };
    return PaintColor2;
  }();
  var PaintContextFill = /* @__PURE__ */ function() {
    function PaintContextFill2() {
    }
    ;
    PaintContextFill2.value = new PaintContextFill2();
    return PaintContextFill2;
  }();
  var PaintContextStroke = /* @__PURE__ */ function() {
    function PaintContextStroke2() {
    }
    ;
    PaintContextStroke2.value = new PaintContextStroke2();
    return PaintContextStroke2;
  }();
  var showPaint = {
    show: function(v2) {
      if (v2 instanceof PaintNone) {
        return "none";
      }
      ;
      if (v2 instanceof PaintUrl) {
        return show9(v2.value0) + foldMap3(function(color) {
          return " " + show15(color);
        })(v2.value1);
      }
      ;
      if (v2 instanceof PaintColor) {
        return show15(v2.value0);
      }
      ;
      if (v2 instanceof PaintContextFill) {
        return "context-fill";
      }
      ;
      if (v2 instanceof PaintContextStroke) {
        return "context-stroke";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.ContentType.Paint (line 20, column 10 - line 25, column 43): " + [v2.constructor.name]);
    }
  };
  var isPaintURL = {
    isPaint: function(url) {
      return new PaintUrl(url, Nothing.value);
    }
  };
  var isPaintString = {
    isPaint: function(namedColor) {
      return new PaintColor(new Named(namedColor));
    }
  };
  var isPaintPaint = {
    isPaint: /* @__PURE__ */ identity(categoryFn)
  };
  var isPaintColor = /* @__PURE__ */ function() {
    return {
      isPaint: PaintColor.create
    };
  }();
  var hasNonePaint = /* @__PURE__ */ function() {
    return {
      none: PaintNone.value
    };
  }();
  var isPaint = function(dict) {
    return dict.isPaint;
  };

  // output/Halogen.Svg.Attributes.ContentType.Percentage/index.js
  var show10 = /* @__PURE__ */ show(showNumber);
  var Percentage = /* @__PURE__ */ function() {
    function Percentage2(value0) {
      this.value0 = value0;
    }
    ;
    Percentage2.create = function(value0) {
      return new Percentage2(value0);
    };
    return Percentage2;
  }();
  var printPercentage = function(v2) {
    return show10(v2.value0) + "%";
  };

  // output/Halogen.Svg.Attributes.ContentType.Transform/index.js
  var show11 = /* @__PURE__ */ show(showNumber);
  var Matrix = /* @__PURE__ */ function() {
    function Matrix2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Matrix2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Matrix2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Matrix2;
  }();
  var Translate = /* @__PURE__ */ function() {
    function Translate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Translate2.create = function(value0) {
      return function(value1) {
        return new Translate2(value0, value1);
      };
    };
    return Translate2;
  }();
  var Scale = /* @__PURE__ */ function() {
    function Scale2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Scale2.create = function(value0) {
      return function(value1) {
        return new Scale2(value0, value1);
      };
    };
    return Scale2;
  }();
  var Rotate = /* @__PURE__ */ function() {
    function Rotate2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Rotate2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Rotate2(value0, value1, value22);
        };
      };
    };
    return Rotate2;
  }();
  var SkewX = /* @__PURE__ */ function() {
    function SkewX2(value0) {
      this.value0 = value0;
    }
    ;
    SkewX2.create = function(value0) {
      return new SkewX2(value0);
    };
    return SkewX2;
  }();
  var SkewY = /* @__PURE__ */ function() {
    function SkewY2(value0) {
      this.value0 = value0;
    }
    ;
    SkewY2.create = function(value0) {
      return new SkewY2(value0);
    };
    return SkewY2;
  }();
  var showTransform = {
    show: function(v2) {
      if (v2 instanceof Matrix) {
        return "matrix(" + (show11(v2.value0) + ("," + (show11(v2.value1) + ("," + (show11(v2.value2) + ("," + (show11(v2.value3) + ("," + (show11(v2.value4) + ("," + (show11(v2.value5) + ")")))))))))));
      }
      ;
      if (v2 instanceof Translate) {
        return "translate(" + (show11(v2.value0) + ("," + (show11(v2.value1) + ")")));
      }
      ;
      if (v2 instanceof Scale) {
        return "scale(" + (show11(v2.value0) + ("," + (show11(v2.value1) + ")")));
      }
      ;
      if (v2 instanceof Rotate) {
        return "rotate(" + (show11(v2.value0) + ("," + (show11(v2.value1) + ("," + (show11(v2.value2) + ")")))));
      }
      ;
      if (v2 instanceof SkewX) {
        return "skewX(" + (show11(v2.value0) + ")");
      }
      ;
      if (v2 instanceof SkewY) {
        return "skewY(" + (show11(v2.value0) + ")");
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.ContentType.Transform (line 18, column 10 - line 24, column 41): " + [v2.constructor.name]);
    }
  };
  var isTransformTransform = {
    isTransform: /* @__PURE__ */ show(showTransform)
  };
  var isTransform = function(dict) {
    return dict.isTransform;
  };
  var isTransformArrayTransform = {
    isTransform: /* @__PURE__ */ function() {
      var $94 = joinWith(" ");
      var $95 = map(functorArray)(isTransform(isTransformTransform));
      return function($96) {
        return $94($95($96));
      };
    }()
  };

  // output/Halogen.Svg.Attributes.ContentType/index.js
  var isLengthPercentagePercent = {
    isLengthPercentage: printPercentage
  };
  var isLengthPercentageNumberN = {
    isLengthPercentageNumber: /* @__PURE__ */ show(showNumber)
  };
  var isLengthPercentageNumberI = {
    isLengthPercentageNumber: /* @__PURE__ */ show(showInt)
  };
  var isLengthPercentageLength = {
    isLengthPercentage: /* @__PURE__ */ show(showLength)
  };
  var isLengthPercentageNumber = function(dict) {
    return dict.isLengthPercentageNumber;
  };
  var isLengthPercentage = function(dict) {
    return dict.isLengthPercentage;
  };
  var isLengthPercentageNumber1 = function(dictIsLengthPercentage) {
    return {
      isLengthPercentageNumber: isLengthPercentage(dictIsLengthPercentage)
    };
  };

  // output/Halogen.Svg.Attributes.Coords/index.js
  var show16 = /* @__PURE__ */ show(showNumber);
  var viewBox = function(minx) {
    return function(miny) {
      return function(width18) {
        return function(height18) {
          return attr2("viewBox")(show16(minx) + (" " + (show16(miny) + (" " + (show16(width18) + (" " + show16(height18)))))));
        };
      };
    };
  };
  var transform = function(dictIsTransform) {
    var $45 = attr2("transform");
    var $46 = isTransform(dictIsTransform);
    return function($47) {
      return $45($46($47));
    };
  };

  // output/Halogen.Svg.Attributes.Fonts/index.js
  var show17 = /* @__PURE__ */ show(showInt);
  var FontWeightNormal = /* @__PURE__ */ function() {
    function FontWeightNormal2() {
    }
    ;
    FontWeightNormal2.value = new FontWeightNormal2();
    return FontWeightNormal2;
  }();
  var FontWeightBold = /* @__PURE__ */ function() {
    function FontWeightBold2() {
    }
    ;
    FontWeightBold2.value = new FontWeightBold2();
    return FontWeightBold2;
  }();
  var FontWeightBolder = /* @__PURE__ */ function() {
    function FontWeightBolder2() {
    }
    ;
    FontWeightBolder2.value = new FontWeightBolder2();
    return FontWeightBolder2;
  }();
  var FontWeightNumber = /* @__PURE__ */ function() {
    function FontWeightNumber2(value0) {
      this.value0 = value0;
    }
    ;
    FontWeightNumber2.create = function(value0) {
      return new FontWeightNumber2(value0);
    };
    return FontWeightNumber2;
  }();
  var isFontSize1 = function(dictIsLengthPercentage) {
    return {
      isFontSize: isLengthPercentage(dictIsLengthPercentage)
    };
  };
  var isFontFamilyString = {
    isFontFamily: /* @__PURE__ */ identity(categoryFn)
  };
  var showFontWeight = {
    show: function(v2) {
      if (v2 instanceof FontWeightNormal) {
        return "normal";
      }
      ;
      if (v2 instanceof FontWeightBold) {
        return "bold";
      }
      ;
      if (v2 instanceof FontWeightBolder) {
        return "bolder";
      }
      ;
      if (v2 instanceof FontWeightNumber) {
        return show17(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Fonts (line 100, column 10 - line 104, column 33): " + [v2.constructor.name]);
    }
  };
  var isFontWeightFontWeight = {
    isFontWeight: /* @__PURE__ */ show(showFontWeight)
  };
  var isFontWeight = function(dict) {
    return dict.isFontWeight;
  };
  var isFontSize = function(dict) {
    return dict.isFontSize;
  };
  var isFontFamily = function(dict) {
    return dict.isFontFamily;
  };
  var fontWeight = function(dictIsFontWeight) {
    var $80 = attr2("font-weight");
    var $81 = isFontWeight(dictIsFontWeight);
    return function($82) {
      return $80($81($82));
    };
  };
  var fontSize = function(dictIsFontSize) {
    var $83 = attr2("font-size");
    var $84 = isFontSize(dictIsFontSize);
    return function($85) {
      return $83($84($85));
    };
  };
  var fontFamily = function(dictIsFontFamily) {
    var $86 = attr2("font-family");
    var $87 = isFontFamily(dictIsFontFamily);
    return function($88) {
      return $86($87($88));
    };
  };

  // output/Halogen.Svg.Attributes.Geometry/index.js
  var isGeometry1 = function(dictIsLengthPercentageNumber) {
    return {
      isGeometry: isLengthPercentageNumber(dictIsLengthPercentageNumber)
    };
  };
  var width8 = function(dictIsLengthPercentageNumber) {
    var $54 = attr2("width");
    var $55 = isLengthPercentageNumber(dictIsLengthPercentageNumber);
    return function($56) {
      return $54($55($56));
    };
  };
  var isGeometry = function(dict) {
    return dict.isGeometry;
  };
  var r = function(dictIsGeometry) {
    var $57 = attr2("r");
    var $58 = isGeometry(dictIsGeometry);
    return function($59) {
      return $57($58($59));
    };
  };
  var rx = function(dictIsGeometry) {
    var $60 = attr2("rx");
    var $61 = isGeometry(dictIsGeometry);
    return function($62) {
      return $60($61($62));
    };
  };
  var ry = function(dictIsGeometry) {
    var $63 = attr2("ry");
    var $64 = isGeometry(dictIsGeometry);
    return function($65) {
      return $63($64($65));
    };
  };
  var x = function(dictIsGeometry) {
    var $66 = attr2("x");
    var $67 = isGeometry(dictIsGeometry);
    return function($68) {
      return $66($67($68));
    };
  };
  var x1 = function(dictIsGeometry) {
    var $69 = attr2("x1");
    var $70 = isGeometry(dictIsGeometry);
    return function($71) {
      return $69($70($71));
    };
  };
  var x2 = function(dictIsGeometry) {
    var $72 = attr2("x2");
    var $73 = isGeometry(dictIsGeometry);
    return function($74) {
      return $72($73($74));
    };
  };
  var y = function(dictIsGeometry) {
    var $75 = attr2("y");
    var $76 = isGeometry(dictIsGeometry);
    return function($77) {
      return $75($76($77));
    };
  };
  var y1 = function(dictIsGeometry) {
    var $78 = attr2("y1");
    var $79 = isGeometry(dictIsGeometry);
    return function($80) {
      return $78($79($80));
    };
  };
  var y2 = function(dictIsGeometry) {
    var $81 = attr2("y2");
    var $82 = isGeometry(dictIsGeometry);
    return function($83) {
      return $81($82($83));
    };
  };
  var height8 = function(dictIsLengthPercentageNumber) {
    var $87 = attr2("height");
    var $88 = isLengthPercentageNumber(dictIsLengthPercentageNumber);
    return function($89) {
      return $87($88($89));
    };
  };
  var dy = function(dictIsGeometry) {
    var $96 = attr2("dy");
    var $97 = isGeometry(dictIsGeometry);
    return function($98) {
      return $96($97($98));
    };
  };
  var dx = function(dictIsGeometry) {
    var $99 = attr2("dx");
    var $100 = isGeometry(dictIsGeometry);
    return function($101) {
      return $99($100($101));
    };
  };
  var cy = function(dictIsGeometry) {
    var $102 = attr2("cy");
    var $103 = isGeometry(dictIsGeometry);
    return function($104) {
      return $102($103($104));
    };
  };
  var cx = function(dictIsGeometry) {
    var $105 = attr2("cx");
    var $106 = isGeometry(dictIsGeometry);
    return function($107) {
      return $105($106($107));
    };
  };

  // output/Halogen.Svg.Attributes.HasClasses/index.js
  var none2 = function(dict) {
    return dict.none;
  };
  var auto = function(dict) {
    return dict.auto;
  };

  // output/Halogen.Svg.Attributes.Text/index.js
  var map19 = /* @__PURE__ */ map(functorArray);
  var TextAnchorStart = /* @__PURE__ */ function() {
    function TextAnchorStart2() {
    }
    ;
    TextAnchorStart2.value = new TextAnchorStart2();
    return TextAnchorStart2;
  }();
  var TextAnchorMiddle = /* @__PURE__ */ function() {
    function TextAnchorMiddle2() {
    }
    ;
    TextAnchorMiddle2.value = new TextAnchorMiddle2();
    return TextAnchorMiddle2;
  }();
  var TextAnchorEnd = /* @__PURE__ */ function() {
    function TextAnchorEnd2() {
    }
    ;
    TextAnchorEnd2.value = new TextAnchorEnd2();
    return TextAnchorEnd2;
  }();
  var showTextAnchor = {
    show: function(v2) {
      if (v2 instanceof TextAnchorStart) {
        return "start";
      }
      ;
      if (v2 instanceof TextAnchorMiddle) {
        return "middle";
      }
      ;
      if (v2 instanceof TextAnchorEnd) {
        return "end";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Text (line 43, column 10 - line 46, column 27): " + [v2.constructor.name]);
    }
  };
  var isTextRotateInt = {
    isTextRotate: /* @__PURE__ */ show(showInt)
  };
  var textAnchor = /* @__PURE__ */ function() {
    var $27 = attr2("text-anchor");
    var $28 = show(showTextAnchor);
    return function($29) {
      return $27($28($29));
    };
  }();
  var isTextRotate = function(dict) {
    return dict.isTextRotate;
  };
  var isTextRotateArray = function(dictIsTextRotate) {
    return {
      isTextRotate: function() {
        var $33 = joinWith(" ");
        var $34 = map19(isTextRotate(dictIsTextRotate));
        return function($35) {
          return $33($34($35));
        };
      }()
    };
  };
  var href4 = function(v2) {
    return attr2("href")(v2);
  };

  // output/Halogen.Svg.Attributes.Overloaded/index.js
  var show18 = /* @__PURE__ */ show(showPaint);
  var typeAttributeTransformTyp = {
    type_: /* @__PURE__ */ function() {
      var $17 = attr2("type");
      var $18 = show(showTransformType);
      return function($19) {
        return $17($18($19));
      };
    }()
  };
  var rotateAttributeAnimateMot = {
    rotate: /* @__PURE__ */ function() {
      var $20 = attr2("rotate");
      var $21 = show(showAnimateMotionRotation);
      return function($22) {
        return $20($21($22));
      };
    }()
  };
  var rotateAttribute = function(dictIsTextRotate) {
    return {
      rotate: function() {
        var $23 = attr2("rotate");
        var $24 = isTextRotate(dictIsTextRotate);
        return function($25) {
          return $23($24($25));
        };
      }()
    };
  };
  var fillAttributeTimingFill = {
    fill: /* @__PURE__ */ function() {
      var $26 = attr2("fill");
      var $27 = show(showTimingFill);
      return function($28) {
        return $26($27($28));
      };
    }()
  };
  var fillAttribute = function(dictIsPaint) {
    return {
      fill: function() {
        var $29 = attr2("fill");
        var $30 = isPaint(dictIsPaint);
        return function($31) {
          return $29(show18($30($31)));
        };
      }()
    };
  };
  var type_18 = function(dict) {
    return dict.type_;
  };
  var rotate = function(dict) {
    return dict.rotate;
  };
  var fill = function(dict) {
    return dict.fill;
  };

  // output/Halogen.Svg.Attributes.Painting.Stroke/index.js
  var show19 = /* @__PURE__ */ show(showNumber);
  var show110 = /* @__PURE__ */ show(showPaint);
  var map20 = /* @__PURE__ */ map(functorArray);
  var StrokeLineJoinMiter = /* @__PURE__ */ function() {
    function StrokeLineJoinMiter2() {
    }
    ;
    StrokeLineJoinMiter2.value = new StrokeLineJoinMiter2();
    return StrokeLineJoinMiter2;
  }();
  var StrokeLineJoinMiterClip = /* @__PURE__ */ function() {
    function StrokeLineJoinMiterClip2() {
    }
    ;
    StrokeLineJoinMiterClip2.value = new StrokeLineJoinMiterClip2();
    return StrokeLineJoinMiterClip2;
  }();
  var StrokeLineJoinRound = /* @__PURE__ */ function() {
    function StrokeLineJoinRound2() {
    }
    ;
    StrokeLineJoinRound2.value = new StrokeLineJoinRound2();
    return StrokeLineJoinRound2;
  }();
  var StrokeLineJoinBevel = /* @__PURE__ */ function() {
    function StrokeLineJoinBevel2() {
    }
    ;
    StrokeLineJoinBevel2.value = new StrokeLineJoinBevel2();
    return StrokeLineJoinBevel2;
  }();
  var StrokeLineJoinArcs = /* @__PURE__ */ function() {
    function StrokeLineJoinArcs2() {
    }
    ;
    StrokeLineJoinArcs2.value = new StrokeLineJoinArcs2();
    return StrokeLineJoinArcs2;
  }();
  var StrokeLineCapButt = /* @__PURE__ */ function() {
    function StrokeLineCapButt2() {
    }
    ;
    StrokeLineCapButt2.value = new StrokeLineCapButt2();
    return StrokeLineCapButt2;
  }();
  var StrokeLineCapRound = /* @__PURE__ */ function() {
    function StrokeLineCapRound2() {
    }
    ;
    StrokeLineCapRound2.value = new StrokeLineCapRound2();
    return StrokeLineCapRound2;
  }();
  var StrokeLineCapSquare = /* @__PURE__ */ function() {
    function StrokeLineCapSquare2() {
    }
    ;
    StrokeLineCapSquare2.value = new StrokeLineCapSquare2();
    return StrokeLineCapSquare2;
  }();
  var showStrokeLineJoin = {
    show: function(v2) {
      if (v2 instanceof StrokeLineJoinMiter) {
        return "miter";
      }
      ;
      if (v2 instanceof StrokeLineJoinMiterClip) {
        return "miter-clip";
      }
      ;
      if (v2 instanceof StrokeLineJoinRound) {
        return "round";
      }
      ;
      if (v2 instanceof StrokeLineJoinBevel) {
        return "bevel";
      }
      ;
      if (v2 instanceof StrokeLineJoinArcs) {
        return "arcs";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Painting.Stroke (line 29, column 10 - line 34, column 33): " + [v2.constructor.name]);
    }
  };
  var showStrokeLineCap = {
    show: function(v2) {
      if (v2 instanceof StrokeLineCapButt) {
        return "butt";
      }
      ;
      if (v2 instanceof StrokeLineCapRound) {
        return "round";
      }
      ;
      if (v2 instanceof StrokeLineCapSquare) {
        return "square";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Painting.Stroke (line 20, column 10 - line 23, column 36): " + [v2.constructor.name]);
    }
  };
  var isStrokeDashOffsetNumber = {
    isStrokeDashOffset: show19
  };
  var isDashArray1 = function(dictIsLengthPercentageNumber) {
    return {
      isDashArray: isLengthPercentageNumber(dictIsLengthPercentageNumber)
    };
  };
  var strokeWidth = function(dictIsLengthPercentageNumber) {
    var $42 = attr2("stroke-width");
    var $43 = isLengthPercentageNumber(dictIsLengthPercentageNumber);
    return function($44) {
      return $42($43($44));
    };
  };
  var strokeMiterLimit = /* @__PURE__ */ function() {
    var $47 = attr2("stroke-miterlimit");
    return function($48) {
      return $47(show19($48));
    };
  }();
  var strokeLineJoin = /* @__PURE__ */ function() {
    var $49 = attr2("stroke-linejoin");
    var $50 = show(showStrokeLineJoin);
    return function($51) {
      return $49($50($51));
    };
  }();
  var strokeLineCap = /* @__PURE__ */ function() {
    var $52 = attr2("stroke-linecap");
    var $53 = show(showStrokeLineCap);
    return function($54) {
      return $52($53($54));
    };
  }();
  var stroke = function(dictIsPaint) {
    var $55 = attr2("stroke");
    var $56 = isPaint(dictIsPaint);
    return function($57) {
      return $55(show110($56($57)));
    };
  };
  var isStrokeDashOffset = function(dict) {
    return dict.isStrokeDashOffset;
  };
  var strokeDashOffset = function(dictIsStrokeDashOffset) {
    var $58 = attr2("stroke-dashoffset");
    var $59 = isStrokeDashOffset(dictIsStrokeDashOffset);
    return function($60) {
      return $58($59($60));
    };
  };
  var isDashArray = function(dict) {
    return dict.isDashArray;
  };
  var strokeDashArray = function(dictIsDashArray) {
    var $61 = attr2("stroke-dasharray");
    var $62 = isDashArray(dictIsDashArray);
    return function($63) {
      return $61($62($63));
    };
  };
  var isDashArrayArray = function(dictIsDashArray) {
    return {
      isDashArray: function() {
        var $64 = joinWith(",");
        var $65 = map20(isDashArray(dictIsDashArray));
        return function($66) {
          return $64($65($66));
        };
      }()
    };
  };

  // output/Halogen.Svg.Attributes.Render/index.js
  var Visible2 = /* @__PURE__ */ function() {
    function Visible3() {
    }
    ;
    Visible3.value = new Visible3();
    return Visible3;
  }();
  var Hidden = /* @__PURE__ */ function() {
    function Hidden2() {
    }
    ;
    Hidden2.value = new Hidden2();
    return Hidden2;
  }();
  var Collapse = /* @__PURE__ */ function() {
    function Collapse2() {
    }
    ;
    Collapse2.value = new Collapse2();
    return Collapse2;
  }();
  var Inherit = /* @__PURE__ */ function() {
    function Inherit2() {
    }
    ;
    Inherit2.value = new Inherit2();
    return Inherit2;
  }();
  var showVisibility = {
    show: function(v2) {
      if (v2 instanceof Visible2) {
        return "visible";
      }
      ;
      if (v2 instanceof Hidden) {
        return "hidden";
      }
      ;
      if (v2 instanceof Collapse) {
        return "collapse";
      }
      ;
      if (v2 instanceof Inherit) {
        return "inherit";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Render (line 15, column 10 - line 19, column 25): " + [v2.constructor.name]);
    }
  };
  var visibility = /* @__PURE__ */ function() {
    var $12 = attr2("visibility");
    var $13 = show(showVisibility);
    return function($14) {
      return $12($13($14));
    };
  }();

  // output/Halogen.Svg.Attributes.Struct/index.js
  var xmlns = /* @__PURE__ */ attr2("xmlns");
  var version = /* @__PURE__ */ attr2("version");
  var id2 = /* @__PURE__ */ attr2("id");

  // output/Halogen.Svg.Core/index.js
  var ns = /* @__PURE__ */ function() {
    return new Just("http://www.w3.org/2000/svg");
  }();
  var element3 = function(name15) {
    return function(props) {
      return function(children2) {
        return new Elem(ns, name15, props, children2);
      };
    };
  };

  // output/Halogen.Svg.Elements.Animate/index.js
  var set = /* @__PURE__ */ element3("set");
  var mpath = /* @__PURE__ */ element3("mpath");
  var animateTransform = /* @__PURE__ */ element3("animateTransform");
  var animateMotion = /* @__PURE__ */ element3("animateMotion");
  var animateColor = /* @__PURE__ */ element3("animateColor");
  var animate = /* @__PURE__ */ element3("animate");

  // output/Halogen.Svg.Elements.Paths/index.js
  var path2 = /* @__PURE__ */ element3("path");

  // output/Halogen.Svg.Elements.Shapes/index.js
  var rect = /* @__PURE__ */ element3("rect");
  var polyline = /* @__PURE__ */ element3("polyline");
  var polygon = /* @__PURE__ */ element3("polygon");
  var line = /* @__PURE__ */ element3("line");
  var ellipse = /* @__PURE__ */ element3("ellipse");
  var circle = /* @__PURE__ */ element3("circle");

  // output/Halogen.Svg.Elements.Struct/index.js
  var use = /* @__PURE__ */ element3("use");
  var title3 = /* @__PURE__ */ element3("title");
  var svg = /* @__PURE__ */ element3("svg");
  var g = /* @__PURE__ */ element3("g");
  var desc = /* @__PURE__ */ element3("desc");
  var defs = /* @__PURE__ */ element3("defs");

  // output/Halogen.Svg.Elements.Text/index.js
  var tspan = /* @__PURE__ */ element3("tspan");
  var text6 = /* @__PURE__ */ element3("text");

  // output/SvgSpecificationTests.Animate/index.js
  var isLengthPercentageNumber12 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentageLength);
  var width9 = /* @__PURE__ */ width8(isLengthPercentageNumber12);
  var height9 = /* @__PURE__ */ height8(isLengthPercentageNumber12);
  var isGeometry12 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberI);
  var x3 = /* @__PURE__ */ x(isGeometry12);
  var y3 = /* @__PURE__ */ y(isGeometry12);
  var width1 = /* @__PURE__ */ width8(isLengthPercentageNumberI);
  var height1 = /* @__PURE__ */ height8(isLengthPercentageNumberI);
  var fill2 = /* @__PURE__ */ fill(/* @__PURE__ */ fillAttribute(isPaintString));
  var stroke2 = /* @__PURE__ */ stroke(isPaintString);
  var strokeWidth2 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberI);
  var transform2 = /* @__PURE__ */ transform(isTransformArrayTransform);
  var fontSize2 = /* @__PURE__ */ fontSize(/* @__PURE__ */ isFontSize1(isLengthPercentageLength));
  var isGeometry11 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumber12);
  var cx2 = /* @__PURE__ */ cx(isGeometry11);
  var cy2 = /* @__PURE__ */ cy(isGeometry11);
  var r2 = /* @__PURE__ */ r(isGeometry11);
  var d2 = /* @__PURE__ */ d(isPathShapeArrayCommandPo);
  var strokeWidth1 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumber12);
  var dur2 = /* @__PURE__ */ dur(isDurationClockValue);
  var seconds2 = /* @__PURE__ */ seconds(toClockValueInt);
  var isGeometry122 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberN);
  var begin2 = /* @__PURE__ */ begin(isAnimationTriggerClockVa);
  var fill1 = /* @__PURE__ */ fill(fillAttributeTimingFill);
  var type_19 = /* @__PURE__ */ type_18(typeAttributeTransformTyp);
  var from3 = /* @__PURE__ */ from2(showNumber);
  var to2 = /* @__PURE__ */ to(showNumber);
  var from1 = /* @__PURE__ */ from2(showLength);
  var to1 = /* @__PURE__ */ to(showLength);
  var dom01 = /* @__PURE__ */ function() {
    return svg([width9(new Cm(4)), height9(new Cm(2)), viewBox(0)(0)(400)(200), xmlns("http://www.w3.org/2000/svg")])([text5('\n      <script type="application/ecmascript"><![CDATA[\n        var timevalue = 0;\n        var timer_increment = 50;\n        var max_time = 5000;\n        var text_element;\n        function StartAnimation(evt) {\n          text_element = evt.target.ownerDocument.getElementById("TextElement");\n          ShowAndGrowElement();\n        }\n        function ShowAndGrowElement() {\n          timevalue = timevalue + timer_increment;\n          if (timevalue > max_time)\n            return;\n\n          // Scale the text string gradually until it is 20 times larger\n          scalefactor = (timevalue * 20.) / max_time;\n          text_element.setAttribute("transform", "scale(" + scalefactor + ")");\n          // Make the string more opaque\n          opacityfactor = timevalue / max_time;\n          text_element.setAttribute("opacity", opacityfactor);\n\n          // Call ShowAndGrowElement again <timer_increment> milliseconds later.\n          setTimeout("ShowAndGrowElement()", timer_increment)\n        }\n        window.ShowAndGrowElement = ShowAndGrowElement\n      ]]><\/script>\n    '), rect([x3(1), y3(1), width1(398), height1(198), fill2("none"), stroke2("blue"), strokeWidth2(2)])([]), g([transform2([new Translate(50, 150)]), fill2("red"), fontSize2(new Px(7))])([text6([id2("TextElement")])([text5("SVG")])])]);
  }();
  var animMotion01 = /* @__PURE__ */ function() {
    var circle2 = function(v2) {
      return function(v1) {
        return circle([cx2(v2), cy2(v1), r2(new Px(17.64)), fill2("blue")])([]);
      };
    };
    return svg([width9(new Cm(5)), height9(new Cm(3)), viewBox(0)(0)(500)(300), xmlns("http://www.w3.org/2000/svg")])([desc([])([text5("Example animMotion01 - demonstrate motion animation computations")]), rect([x3(1), y3(1), width1(498), height1(298), fill2("none"), stroke2("blue"), strokeWidth2(2)])([]), path2([id2("path1"), d2([M.create(100)(250), C.create(100)(50)(400)(50)(400)(250)]), fill2("none"), stroke2("blue"), strokeWidth1(new Px(7.06))])([]), circle2(new Px(100))(new Px(250)), circle2(new Px(250))(new Px(100)), circle2(new Px(400))(new Px(250)), path2([d2([M.create(-25)(-12.5), L.create(25)(-12.5), L.create(0)(-87.5), Z.create]), fill2("yellow"), stroke2("red"), strokeWidth1(new Px(7.06))])([animateMotion([dur2(seconds2(6)), repeatCount(isRepeatCountRepeatCount)(RepeatCountIndefinite.value), rotate(rotateAttributeAnimateMot)(auto(hasAutoAnimateMotionRotat))])([mpath([href4("#path1")])([])])])]);
  }();
  var anim01 = /* @__PURE__ */ function() {
    var text7 = text6([id2("TextElement"), x(isGeometry122)(0), y(isGeometry122)(0), fontFamily(isFontFamilyString)("Verdana"), fontSize2(new Px(35.27)), visibility(Hidden.value)])([text5("It's alive!"), set([attributeName("visibility"), attributeType(AttributeTypeCSS.value), to(showVisibility)(Visible2.value), begin2(seconds2(3)), dur2(seconds2(6)), fill1(TimingFillFreeze.value)])([]), animateMotion([path(isPathShapeArrayCommandPo)([M.create(0)(0), L.create(100)(100)]), begin2(seconds2(3)), dur2(seconds2(6)), fill1(TimingFillFreeze.value)])([]), animateColor([attributeName("fill"), attributeType(AttributeTypeCSS.value), from2(showColor)(new RGB(0, 0, 255)), to(showColor)(new RGB(128, 0, 0)), begin2(seconds2(3)), dur2(seconds2(6)), fill1(TimingFillFreeze.value)])([]), animateTransform([attributeName("transform"), attributeType(AttributeTypeXML.value), type_19(TransformTypeRotate.value), from3(-30), to2(0), begin2(seconds2(3)), dur2(seconds2(6)), fill1(TimingFillFreeze.value)])([]), animateTransform([attributeName("transform"), attributeType(AttributeTypeXML.value), type_19(TransformTypeScale.value), from3(1), to2(3), additive(AdditiveSum.value), begin2(seconds2(3)), dur2(seconds2(6)), fill1(TimingFillFreeze.value)])([])]);
    var borderRect = rect([x3(1), y3(1), width1(798), height1(298), fill2("none"), stroke2("blue"), strokeWidth2(2)])([]);
    var animation = function(attributeName2) {
      return function(from22) {
        return function(to22) {
          return animate([attributeName(attributeName2), attributeType(AttributeTypeXML.value), begin2(seconds2(0)), dur2(seconds2(9)), fill1(TimingFillFreeze.value), from1(from22), to1(to22)])([]);
        };
      };
    };
    var growingRect = rect([x3(300), y3(100), width1(300), height1(100), fill(fillAttribute(isPaintColor))(new RGB(255, 255, 0))])([animation("x")(new Px(300))(new Px(0)), animation("y")(new Px(100))(new Px(0)), animation("width")(new Px(300))(new Px(800)), animation("height")(new Px(100))(new Px(300))]);
    return svg([width9(new Cm(8)), height9(new Cm(3)), viewBox(0)(0)(800)(300), xmlns("http://www.w3.org/2000/svg")])([desc([])([text5("Example anim01 - demonstrate animation elements")]), borderRect, growingRect, g([transform2([new Translate(100, 100)])])([text7])]);
  }();
  var referenceTests = [{
    referenceURL: "./references/animate/anim01.svg",
    actualSVG: anim01
  }, {
    referenceURL: "./references/animate/animMotion01.svg",
    actualSVG: animMotion01
  }, {
    referenceURL: "./references/animate/dom01.svg",
    actualSVG: dom01
  }];

  // output/Halogen.Svg.Attributes.Filter/index.js
  var UserSpaceOnUse = /* @__PURE__ */ function() {
    function UserSpaceOnUse2() {
    }
    ;
    UserSpaceOnUse2.value = new UserSpaceOnUse2();
    return UserSpaceOnUse2;
  }();
  var ObjectBoundingBox = /* @__PURE__ */ function() {
    function ObjectBoundingBox2() {
    }
    ;
    ObjectBoundingBox2.value = new ObjectBoundingBox2();
    return ObjectBoundingBox2;
  }();
  var showFilterUnits = {
    show: function(v2) {
      if (v2 instanceof UserSpaceOnUse) {
        return "userSpaceOnUse";
      }
      ;
      if (v2 instanceof ObjectBoundingBox) {
        return "objectBoundingBox";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Filter (line 21, column 10 - line 23, column 45): " + [v2.constructor.name]);
    }
  };

  // output/Halogen.Svg.Attributes.PaintServers/index.js
  var show20 = /* @__PURE__ */ show(showFilterUnits);
  var patternUnits = /* @__PURE__ */ function() {
    var $4 = attr2("patternUnits");
    return function($5) {
      return $4(show20($5));
    };
  }();
  var patternTransform = function(dictIsTransform) {
    var $6 = attr2("patternTransform");
    var $7 = isTransform(dictIsTransform);
    return function($8) {
      return $6($7($8));
    };
  };

  // output/Halogen.Svg.Attributes.Painting.Fill/index.js
  var NonZero = /* @__PURE__ */ function() {
    function NonZero2() {
    }
    ;
    NonZero2.value = new NonZero2();
    return NonZero2;
  }();
  var EvenOdd = /* @__PURE__ */ function() {
    function EvenOdd2() {
    }
    ;
    EvenOdd2.value = new EvenOdd2();
    return EvenOdd2;
  }();
  var showFillRule = {
    show: function(v2) {
      if (v2 instanceof NonZero) {
        return "nonzero";
      }
      ;
      if (v2 instanceof EvenOdd) {
        return "evenodd";
      }
      ;
      throw new Error("Failed pattern match at Halogen.Svg.Attributes.Painting.Fill (line 17, column 10 - line 19, column 25): " + [v2.constructor.name]);
    }
  };
  var fillRule = /* @__PURE__ */ function() {
    var $6 = attr2("fill-rule");
    var $7 = show(showFillRule);
    return function($8) {
      return $6($7($8));
    };
  }();
  var fillOpacity = /* @__PURE__ */ function() {
    var $9 = attr2("fill-opacity");
    var $10 = show(showNumber);
    return function($11) {
      return $9($10($11));
    };
  }();

  // output/Halogen.Svg.Elements.PaintServers/index.js
  var pattern2 = /* @__PURE__ */ element3("pattern");

  // output/SvgSpecificationTests.Painting/index.js
  var isLengthPercentageNumber13 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentageLength);
  var width10 = /* @__PURE__ */ width8(isLengthPercentageNumber13);
  var height10 = /* @__PURE__ */ height8(isLengthPercentageNumber13);
  var isLengthPercentageNumber11 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentagePercent);
  var width12 = /* @__PURE__ */ width8(isLengthPercentageNumber11);
  var height12 = /* @__PURE__ */ height8(isLengthPercentageNumber11);
  var isGeometry13 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberN);
  var x4 = /* @__PURE__ */ x(isGeometry13);
  var y4 = /* @__PURE__ */ y(isGeometry13);
  var transform3 = /* @__PURE__ */ transform(isTransformArrayTransform);
  var d3 = /* @__PURE__ */ d(isPathShapeArrayCommandPo);
  var fontFamily2 = /* @__PURE__ */ fontFamily(isFontFamilyString);
  var fontSize3 = /* @__PURE__ */ fontSize(/* @__PURE__ */ isFontSize1(isLengthPercentageLength));
  var strokeWidth3 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumber13);
  var isGeometry112 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumber13);
  var x12 = /* @__PURE__ */ x(isGeometry112);
  var y12 = /* @__PURE__ */ y(isGeometry112);
  var fill3 = /* @__PURE__ */ fill(/* @__PURE__ */ fillAttribute(isPaintString));
  var stroke3 = /* @__PURE__ */ stroke(isPaintString);
  var d1 = /* @__PURE__ */ d(isPathShapeString);
  var cy3 = /* @__PURE__ */ cy(isGeometry13);
  var r3 = /* @__PURE__ */ r(isGeometry13);
  var strokeWidth12 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberN);
  var transform1 = /* @__PURE__ */ transform(isTransformTransform);
  var isGeometry123 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberI);
  var x22 = /* @__PURE__ */ x(isGeometry123);
  var y22 = /* @__PURE__ */ y(isGeometry123);
  var strokeDashArray2 = /* @__PURE__ */ strokeDashArray(/* @__PURE__ */ isDashArrayArray(/* @__PURE__ */ isDashArray1(isLengthPercentageNumberI)));
  var strokeDashOffset2 = /* @__PURE__ */ strokeDashOffset(isStrokeDashOffsetNumber);
  var willChangeImage = /* @__PURE__ */ function() {
    return svg([width10(new Px(400)), height10(new Px(300))])([style_([text5("")]), g([])([rect([id2("background"), width12(new Percentage(100)), height12(new Percentage(100))])([]), text6([x4(10), y4(30)])([text5("Drag the star!")]), path2([id2("star1"), transform3([new Translate(200, 150)]), d3([M.create(0)(-40), L.create(-11.76)(-16.18), L.create(-38.04)(-12.36), L.create(-19.02)(6.18), L.create(-23.51)(32.36), L.create(0)(20), L.create(23.51)(32.36), L.create(19.02)(6.18), L.create(38.04)(-12.36), L.create(11.76)(-16.18), Z.create])])([]), path2([id2("star2"), transform3([new Translate(200, 150)]), d3([M.create(0)(-40), L.create(-11.76)(-16.18), L.create(-38.04)(-12.36), L.create(-19.02)(6.18), L.create(-23.51)(32.36), L.create(0)(20), L.create(23.51)(32.36), L.create(19.02)(6.18), L.create(38.04)(-12.36), L.create(11.76)(-16.18), Z.create])])([])])]);
  }();
  var paintOrder = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(600)(150), width10(new Px(600)), height10(new Px(150))])([g([fontFamily2("sans-serif"), fontSize3(new Px(80)), fontWeight(isFontWeightFontWeight)(FontWeightBold.value), strokeWidth3(new Px(6)), strokeLineJoin(StrokeLineJoinMiter.value), textAnchor(TextAnchorMiddle.value)])([text6([x12(new Px(150)), y12(new Px(100)), fill3("peachpuff"), stroke3("crimson")])([text5("pizazz")]), g([strokeWidth3(new Px(12))])([text6([x12(new Px(450)), y12(new Px(100)), fill3("none"), stroke3("crimson")])([text5("pizazz")]), text6([x12(new Px(450)), y12(new Px(100)), fill3("peachpuff"), stroke3("none")])([text5("pizazz")])])])]);
  }();
  var miterLimit = /* @__PURE__ */ function() {
    return svg([width10(new Px(600)), height10(new Px(180)), viewBox(0)(0)(600)(180)])([style_([text5("")]), defs([])([path2([id2("path1"), d1("m 25,60 150,30 -150,30"), fill3("none"), strokeMiterLimit(10)])([]), circle([id2("circle1"), cx(isGeometry13)(175), cy3(90), r3(4)])([]), path2([id2("limit"), d1("m 227.5,30 0,120"), fill3("none"), stroke3("#6a9100"), strokeDashArray(isDashArray1(isLengthPercentageNumberN))(4)])([])]), g([transform3([new Translate(0, 0)])])([use([href4("#path1"), strokeLineJoin(StrokeLineJoinMiter.value)])([]), use([href4("#path1"), strokeLineJoin(StrokeLineJoinBevel.value), stroke3("black")])([]), use([href4("#path1")])([]), use([href4("#circle1")])([]), use([href4("#limit")])([]), text6([x4(150), y4(150)])([text5("\u2018miter\u2019 join")])]), g([transform3([new Translate(300, 0)])])([use([href4("#path1"), strokeLineJoin(StrokeLineJoinMiter.value)])([]), use([href4("#path1")])([]), use([href4("#circle1")])([]), use([href4("#limit")])([]), text6([x4(150), y4(150)])([text5("\u2018miter-clip\u2019 join")])])]);
  }();
  var markerContext = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(100)(100), width10(new Px(100)), height10(new Px(100))])([path2([fill3("none"), strokeWidth12(4)])([])]);
  }();
  var lineCapConstruction = /* @__PURE__ */ function() {
    var lineCapCol = function(v2) {
      return g([textAnchor(TextAnchorMiddle.value), fontFamily2("sans-serif"), fontSize3(new Px(16))])([g([transform1(v2.translate)])([path2([d1("M 100,100 C 200,100 100,200 200,150"), fill3("none"), stroke3("#444"), strokeWidth12(20), strokeLineCap(v2.lineCap)])([]), path2([d1("M 100,100 C 200,100 100,200 200,150"), fill3("none"), stroke3("#ccc"), strokeWidth12(2), strokeLineCap(v2.lineCap)])([]), g([stroke3("#ccc"), strokeWidth12(1)])([g([stroke3("#6a9100")])([path2([d1("M 60,100 h 80"), transform3([new Rotate(90, 100, 100)])])([]), path2([d1("M -40,0 h 80"), transform3([new Translate(200, 150), new Rotate(65, 0, 0)])])([])])]), text6([x22(150), y22(40)])([text5(v2.title)])])]);
    };
    return svg([viewBox(0)(0)(600)(350), width10(new Px(600)), height10(new Px(350))])(map(functorArray)(lineCapCol)([{
      lineCap: StrokeLineCapButt.value,
      title: "'butt' cap",
      translate: new Translate(-30, 0)
    }, {
      lineCap: StrokeLineCapRound.value,
      title: "'round' cap",
      translate: new Translate(150, 0)
    }, {
      lineCap: StrokeLineCapSquare.value,
      title: "'square' cap",
      translate: new Translate(330, 0)
    }]));
  }();
  var fillRuleNonZero = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(1200)(400), width10(new Cm(12)), height10(new Cm(4))])([defs([])([path2([id2("Triangle"), d1("M 16,0 L -8,9 v-18 z"), fill3("black"), stroke3("none")])([])]), g([fillRule(NonZero.value), fill3("red"), stroke3("black"), strokeWidth12(3)])([path2([d1("M 250,75 L 323,301 131,161 369,161 177,301 z")])([]), use([href4("#Triangle"), transform3([new Translate(306.21, 249), new Rotate(72, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(175.16, 193.2), new Rotate(216, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(314.26, 161), new Rotate(0, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(221.16, 268.8), new Rotate(144, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(233.21, 126.98), new Rotate(288, 0, 0)])])([]), path2([d1("M 600,81 A 107,107 0 0,1 600,295 A 107,107 0 0,1 600,81 z M 600,139 A 49,49 0 0,1 600,237 A 49,49 0 0,1 600,139 z")])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(0, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(120, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(240, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(60, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(180, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(300, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), path2([d1("M 950,81 A 107,107 0 0,1 950,295 A 107,107 0 0,1 950,81 z M 950,139 A 49,49 0 0,0 950,237 A 49,49 0 0,0 950,139 z")])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(0, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(120, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(240, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(60, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(180, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(300, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(0, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(120, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(240, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(60, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(180, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(300, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([])])]);
  }();
  var fillRuleEvenOdd = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(1200)(400), width10(new Cm(12)), height10(new Cm(4))])([defs([])([path2([id2("Triangle"), d1("M 16,0 L -8,9 v-18 z"), fill3("black"), stroke3("none")])([])]), g([fillRule(EvenOdd.value), fill3("red"), stroke3("black"), strokeWidth12(3)])([path2([d1("M 250,75 L 323,301 131,161 369,161 177,301 z")])([]), use([href4("#Triangle"), transform3([new Translate(306.21, 249), new Rotate(72, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(175.16, 193.2), new Rotate(216, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(314.26, 161), new Rotate(0, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(221.16, 268.8), new Rotate(144, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(233.21, 126.98), new Rotate(288, 0, 0)])])([]), path2([d1("M 600,81 A 107,107 0 0,1 600,295 A 107,107 0 0,1 600,81 z M 600,139 A 49,49 0 0,1 600,237 A 49,49 0 0,1 600,139 z")])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(0, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(120, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(240, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(60, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(180, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(600, 188), new Rotate(300, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), path2([d1("M 950,81 A 107,107 0 0,1 950,295 A 107,107 0 0,1 950,81 z M 950,139 A 49,49 0 0,0 950,237 A 49,49 0 0,0 950,139 z")])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(0, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(120, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(240, 0, 0), new Translate(107, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(60, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(180, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([]), use([href4("#Triangle"), transform3([new Translate(950, 188), new Rotate(300, 0, 0), new Translate(49, 0), new Rotate(90, 0, 0)])])([])])]);
  }();
  var fallbackPaint = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(300)(150), width10(new Px(300)), height10(new Px(150))])([defs([])([pattern2([id2("Hatch"), patternUnits(UserSpaceOnUse.value), patternTransform(isTransformTransform)(new Rotate(45, 0, 0)), width10(new Px(10)), height10(new Px(300))])([path2([strokeWidth12(2), stroke3("black"), d3([M.create(1)(0), L.create(1)(300)])])([])])]), g([stroke3("black"), strokeWidth12(2)])([rect([fill(fillAttribute(isPaintURL))("#Hatch"), x12(new Px(25)), y12(new Px(25)), width10(new Px(100)), height10(new Px(100))])([]), rect([fill3("powderblue"), x12(new Px(175)), y12(new Px(25)), width10(new Px(100)), height10(new Px(100))])([])])]);
  }();
  var dashes = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(300)(150), width10(new Px(300)), height10(new Px(150))])([g([transform3([new Translate(0, -10)]), fill3("none")])([path2([stroke3("#444"), strokeWidth12(20), d3([M.create(50)(50), C.create(250)(50)(50)(150)(250)(100)]), strokeDashArray2([20, 10])])([]), path2([stroke3("crimson"), strokeWidth12(2), d3([M.create(50)(50), C.create(250)(50)(50)(150)(250)(100)])])([])])]);
  }();
  var dashPathLength = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(300)(150), width10(new Px(300)), height10(new Px(150)), xmlns("http://www.w3.org/2000/svg")])([defs([])([path2([id2("p"), d3([M.create(-50)(0), A.create(50)(50)(0)(Arc0.value)(Sweep0.value)(50)(0), A.create(50)(50)(0)(Arc0.value)(Sweep0.value)(-50)(0), Z.create]), pathLength(80)])([]), g([id2("chip"), strokeWidth12(10)])([circle([cy3(5), r3(55), fill3("black"), fillOpacity(0.15), stroke3("none")])([]), use([href4("#p")])([]), use([href4("#p"), fill3("none"), stroke3("#eee"), strokeWidth12(10), strokeDashArray2([10, 10]), strokeDashOffset2(5)])([]), g([fill3("none"), strokeWidth12(5), strokeDashArray2([0, 20]), strokeLineCap(StrokeLineCapRound.value)])([use([href4("#p"), stroke3("#eee"), strokeDashOffset2(10)])([]), use([href4("#p"), strokeDashOffset2(0)])([])]), circle([r3(40), fill3("black"), fillOpacity(0.15), strokeWidth12(2), stroke3("white")])([])])]), rect([width12(new Percentage(100)), height12(new Percentage(100)), fill3("#063")])([]), use([href4("#chip"), x12(new Px(140)), y12(new Px(75)), fill3("#00c"), stroke3("#00c")])([]), use([href4("#chip"), x12(new Px(160)), y12(new Px(85)), fill3("#000"), stroke3("#000")])([]), use([href4("#chip"), x12(new Px(170)), y12(new Px(65)), fill3("#c00"), stroke3("#c00")])([])]);
  }();
  var dashOffset = /* @__PURE__ */ function() {
    return svg([viewBox(0)(0)(300)(150), width10(new Px(300)), height10(new Px(150))])([g([transform3([new Translate(0, -10)]), fill3("none")])([path2([stroke3("#444"), strokeWidth12(20), d3([M.create(50)(50), C.create(250)(50)(50)(150)(250)(100)]), strokeDashArray2([20, 10]), strokeDashOffset2(10)])([]), path2([stroke3("crimson"), strokeWidth12(2), d3([M.create(50)(50), C.create(250)(50)(50)(150)(250)(100)])])([])])]);
  }();
  var referenceTests2 = [{
    referenceURL: "./references/painting/dashes.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/dashoffset.svg",
    actualSVG: dashOffset
  }, {
    referenceURL: "./references/painting/dash-pathlength.svg",
    actualSVG: dashPathLength
  }, {
    referenceURL: "./references/painting/fallback_paint.svg",
    actualSVG: fallbackPaint
  }, {
    referenceURL: "./references/painting/fillrule-evenodd.svg",
    actualSVG: fillRuleEvenOdd
  }, {
    referenceURL: "./references/painting/fillrule-nonzero.svg",
    actualSVG: fillRuleNonZero
  }, {
    referenceURL: "./references/painting/linecap-construction.svg",
    actualSVG: lineCapConstruction
  }, {
    referenceURL: "./references/painting/linecap.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-construction-arcs.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-construction-fallback2.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-construction-fallback3.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-construction-fallback.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-construction.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/linejoin-four.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/marker-context.svg11.svg",
    actualSVG: markerContext
  }, {
    referenceURL: "./references/painting/marker-doubled.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/marker-rendering.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/miter-limit-def.svg",
    actualSVG: dashes
  }, {
    referenceURL: "./references/painting/miter-limit.svg",
    actualSVG: miterLimit
  }, {
    referenceURL: "./references/painting/paintorder.svg",
    actualSVG: paintOrder
  }, {
    referenceURL: "./references/painting/will-change-image.svg",
    actualSVG: willChangeImage
  }];

  // output/Halogen.Svg.Attributes.Shapes/index.js
  var show21 = /* @__PURE__ */ show(showNumber);
  var show111 = /* @__PURE__ */ show(showInt);
  var map21 = /* @__PURE__ */ map(functorArray);
  var isPointsTupleNumberNumber = {
    isPoints: function(v2) {
      return show21(v2.value0) + ("," + show21(v2.value1));
    }
  };
  var isPointsTupleIntInt = {
    isPoints: function(v2) {
      return show111(v2.value0) + ("," + show111(v2.value1));
    }
  };
  var isPoints = function(dict) {
    return dict.isPoints;
  };
  var points = function(dictIsPoints) {
    var $22 = attr2("points");
    var $23 = isPoints(dictIsPoints);
    return function($24) {
      return $22($23($24));
    };
  };
  var isPointsArrayTupleIntInt = {
    isPoints: /* @__PURE__ */ function() {
      var $25 = joinWith(" ");
      var $26 = map21(isPoints(isPointsTupleIntInt));
      return function($27) {
        return $25($26($27));
      };
    }()
  };
  var isPointsArrayTupleNumberN = {
    isPoints: /* @__PURE__ */ function() {
      var $28 = joinWith(" ");
      var $29 = map21(isPoints(isPointsTupleNumberNumber));
      return function($30) {
        return $28($29($30));
      };
    }()
  };

  // output/SvgSpecificationTests.Paths/index.js
  var isLengthPercentageNumber14 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentageLength);
  var width11 = /* @__PURE__ */ width8(isLengthPercentageNumber14);
  var height11 = /* @__PURE__ */ height8(isLengthPercentageNumber14);
  var isGeometry14 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberN);
  var x5 = /* @__PURE__ */ x(isGeometry14);
  var y5 = /* @__PURE__ */ y(isGeometry14);
  var width13 = /* @__PURE__ */ width8(isLengthPercentageNumberN);
  var height13 = /* @__PURE__ */ height8(isLengthPercentageNumberN);
  var fill4 = /* @__PURE__ */ fill(/* @__PURE__ */ fillAttribute(isPaintString));
  var stroke4 = /* @__PURE__ */ stroke(isPaintString);
  var d4 = /* @__PURE__ */ d(isPathShapeArrayCommandPo);
  var strokeWidth4 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberN);
  var isGeometry113 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberI);
  var cx3 = /* @__PURE__ */ cx(isGeometry113);
  var cy4 = /* @__PURE__ */ cy(isGeometry113);
  var r4 = /* @__PURE__ */ r(isGeometry113);
  var strokeWidth13 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberI);
  var points2 = /* @__PURE__ */ points(isPointsArrayTupleIntInt);
  var x13 = /* @__PURE__ */ x(isGeometry113);
  var y13 = /* @__PURE__ */ y(isGeometry113);
  var triangle01 = /* @__PURE__ */ function() {
    return svg([width11(new Cm(4)), height11(new Cm(4)), viewBox(0)(0)(400)(400)])([title3([])([text5("Example triangle01- simple example of a 'path'")]), desc([])([text5("A path that draws a triangle")]), rect([x5(1), y5(1), width13(398), height13(398), fill4("none"), stroke4("blue")])([]), path2([d4([M.create(100)(100), L.create(300)(100), L.create(200)(300), Z.create]), fill4("red"), stroke4("blue"), strokeWidth4(3)])([])]);
  }();
  var quad01 = /* @__PURE__ */ function() {
    return svg([width11(new Cm(12)), height11(new Cm(6)), viewBox(0)(0)(1200)(600)])([title3([])([text5("Example quad01 - quadratic B\xE9zier commands in path data")]), desc([])([text5('Picture showing a "Q" a "T" command, along with annotations showing the control points and end points')]), rect([x5(1), y5(1), width13(1198), height13(598), fill4("none"), stroke4("blue"), strokeWidth4(1)])([]), path2([d4([M.create(200)(300), Q.create(400)(50)(600)(300), T.create(1e3)(300)]), fill4("none"), stroke4("red"), strokeWidth4(5)])([]), g([fill4("black")])([circle([cx3(200), cy4(300), r4(10)])([]), circle([cx3(600), cy4(300), r4(10)])([]), circle([cx3(1e3), cy4(300), r4(10)])([])]), g([fill4("#888888")])([circle([cx3(400), cy4(50), r4(10)])([]), circle([cx3(800), cy4(550), r4(10)])([])]), path2([d4([M.create(200)(300), L.create(400)(50), L.create(600)(300), L.create(800)(550), L.create(1e3)(300)]), fill4("none"), stroke4("#888888"), strokeWidth4(2)])([])]);
  }();
  var cubic01 = /* @__PURE__ */ function() {
    var endPoint = function(v2) {
      return function(v1) {
        return circle([fill4("none"), stroke4("#888888"), strokeWidth13(2), cx3(v2), cy4(v1), r4(10)])([]);
      };
    };
    var ctlPoint = function(v2) {
      return function(v1) {
        return circle([fill4("#888888"), stroke4("none"), cx3(v2), cy4(v1), r4(10)])([]);
      };
    };
    var connect = function(v2) {
      return polyline([fill4("none"), stroke4("#888888"), strokeWidth13(2), points2(v2)])([]);
    };
    var autoCtlPoint = function(v2) {
      return function(v1) {
        return circle([fill4("none"), stroke4("blue"), strokeWidth13(4), cx3(v2), cy4(v1), r4(9)])([]);
      };
    };
    return svg([xmlns("http://www.w3.org/2000/svg"), width11(new Cm(5)), height11(new Cm(4)), viewBox(0)(0)(500)(400), version("1.1")])([title3([])([text5("Example cubic01- cubic B\xE9zier commands in path data")]), desc([])([text5('Picture showing a simple example of path data using both a "C" and an "S" command, along with annotations showing the control points and end points')]), rect([x5(1), y5(1), width13(498), height13(398), fill4("none"), stroke4("blue"), strokeWidth4(1)])([]), connect([new Tuple(100, 200), new Tuple(100, 100)]), connect([new Tuple(250, 100), new Tuple(250, 200)]), connect([new Tuple(250, 200), new Tuple(250, 300)]), connect([new Tuple(400, 300), new Tuple(400, 200)]), path2([d4([M.create(100)(200), C.create(100)(100)(250)(100)(250)(200), S.create(400)(300)(400)(200)]), fill4("none"), stroke4("red"), strokeWidth4(5)])([]), endPoint(100)(200), endPoint(250)(200), endPoint(400)(200), ctlPoint(100)(100), ctlPoint(250)(100), ctlPoint(400)(300), autoCtlPoint(250)(300), text6([x13(25), y13(70)])([text5("M100,200 C100,100 250,100 250,200")]), text6([x13(325), y13(350), style2("text-anchor:middle")])([text5("S400,300 400,200")])]);
  }();
  var arcs01 = /* @__PURE__ */ function() {
    return svg([width11(new Cm(12)), height11(new Cm(5.25)), viewBox(0)(0)(1200)(400), xmlns("http://www.w3.org/2000/svg")])([title3([])([text5("Example arcs01 - arc commands in path data")]), desc([])([text5("Picture of a pie chart with two pie wedges and a picture of a line with arc blips")]), rect([x13(1), y13(1), width8(isLengthPercentageNumberI)(1198), height8(isLengthPercentageNumberI)(398), fill4("none"), stroke4("blue"), strokeWidth13(1)])([]), path2([d4([M.create(300)(200), h(-150), a2(150)(150)(0)(Arc1.value)(Sweep0.value)(150)(-150), z]), fill4("red"), stroke4("blue"), strokeWidth13(5)])([]), path2([d4([M.create(275)(175), v(-150), a2(150)(150)(0)(Arc0.value)(Sweep0.value)(-150)(150), Z.create]), fill4("yellow"), stroke4("blue"), strokeWidth13(5)])([]), path2([d4([M.create(600)(350), l(50)(-25), a2(25)(25)(-30)(Arc0.value)(Sweep1.value)(50)(-25), l(50)(-25), a2(25)(50)(-30)(Arc0.value)(Sweep1.value)(50)(-25), l(50)(-25), a2(25)(75)(-30)(Arc0.value)(Sweep1.value)(50)(-25), l(50)(-25), a2(25)(100)(-30)(Arc0.value)(Sweep1.value)(50)(-25), l(50)(-25)]), fill4("none"), stroke4("red"), strokeWidth13(5)])([])]);
  }();
  var referenceTests3 = [{
    referenceURL: "./references/paths/arcs01.svg",
    actualSVG: arcs01
  }, {
    referenceURL: "./references/paths/cubic01.svg",
    actualSVG: cubic01
  }, {
    referenceURL: "./references/paths/quad01.svg",
    actualSVG: quad01
  }, {
    referenceURL: "./references/paths/triangle01.svg",
    actualSVG: triangle01
  }];

  // output/SvgSpecificationTests.References/index.js
  var show22 = /* @__PURE__ */ show(showInt);
  var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var referenceTestToTableRow = function(i2) {
    return function(v2) {
      return tr_([td_([text5(show22(i2))]), td_([img([src9(v2.referenceURL)])]), td_([v2.actualSVG])]);
    };
  };
  var referenceTable = function(referenceName) {
    return function(referenceTests6) {
      return p_([h2_([text5(referenceName)]), table_([thead_([tr_([th_([text5("ID")]), th_([text5("Reference")]), th_([text5("Actual")])])]), tbody_(mapWithIndex2(referenceTestToTableRow)(referenceTests6))])]);
    };
  };

  // output/SvgSpecificationTests.Shapes/index.js
  var isLengthPercentageNumber15 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentageLength);
  var width14 = /* @__PURE__ */ width8(isLengthPercentageNumber15);
  var height14 = /* @__PURE__ */ height8(isLengthPercentageNumber15);
  var isGeometry15 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberN);
  var x6 = /* @__PURE__ */ x(isGeometry15);
  var y6 = /* @__PURE__ */ y(isGeometry15);
  var width15 = /* @__PURE__ */ width8(isLengthPercentageNumberN);
  var height15 = /* @__PURE__ */ height8(isLengthPercentageNumberN);
  var fill5 = /* @__PURE__ */ fill(/* @__PURE__ */ fillAttribute(isPaintString));
  var stroke5 = /* @__PURE__ */ stroke(isPaintString);
  var strokeWidth5 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberN);
  var rx2 = /* @__PURE__ */ rx(isGeometry15);
  var transform4 = /* @__PURE__ */ transform(isTransformArrayTransform);
  var points3 = /* @__PURE__ */ points(isPointsArrayTupleNumberN);
  var x14 = /* @__PURE__ */ x1(isGeometry15);
  var y14 = /* @__PURE__ */ y1(isGeometry15);
  var x23 = /* @__PURE__ */ x2(isGeometry15);
  var y23 = /* @__PURE__ */ y2(isGeometry15);
  var ry2 = /* @__PURE__ */ ry(isGeometry15);
  var rect02 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example rect02 - rounded rectangles")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), rect([x6(100), y6(100), width15(400), height15(200), rx2(50), fill5("green")])([]), g([transform4([new Translate(700, 210), new Rotate(-30, 0, 0)])])([rect([x6(0), y6(0), width15(400), height15(200), rx2(50), fill5("none"), stroke5("purple"), strokeWidth5(30)])([])])]);
  }();
  var rect01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example of a rectangle")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), rect([x6(400), y6(100), width15(400), height15(200), fill5("yellow"), stroke5("navy"), strokeWidth5(10)])([])]);
  }();
  var polyline01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example polyline01 - increasingly larger bars")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), polyline([fill(fillAttribute(isPaintPaint))(none2(hasNonePaint)), stroke5("blue"), strokeWidth5(10), points3([new Tuple(50, 375), new Tuple(150, 375), new Tuple(150, 325), new Tuple(250, 325), new Tuple(250, 375), new Tuple(350, 375), new Tuple(350, 250), new Tuple(450, 250), new Tuple(450, 375), new Tuple(550, 375), new Tuple(550, 175), new Tuple(650, 175), new Tuple(650, 375), new Tuple(750, 375), new Tuple(750, 100), new Tuple(850, 100), new Tuple(850, 375), new Tuple(950, 375), new Tuple(950, 25), new Tuple(1050, 25), new Tuple(1050, 375), new Tuple(1150, 375)])])([])]);
  }();
  var polygon01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example polygon01 - star and hexagon")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), polygon([fill5("red"), stroke5("blue"), strokeWidth5(10), points3([new Tuple(350, 75), new Tuple(379, 161), new Tuple(469, 161), new Tuple(397, 215), new Tuple(423, 301), new Tuple(350, 250), new Tuple(277, 301), new Tuple(303, 215), new Tuple(231, 161), new Tuple(321, 161)])])([]), polygon([fill5("lime"), stroke5("blue"), strokeWidth5(10), points3([new Tuple(850, 75), new Tuple(958, 137.5), new Tuple(958, 262.5), new Tuple(850, 325), new Tuple(742, 262.6), new Tuple(742, 137.5)])])([])]);
  }();
  var line01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example line01 - lines expressed in user coordinates")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), g([stroke5("green")])([line([x14(100), y14(300), x23(300), y23(100), strokeWidth5(5)])([]), line([x14(300), y14(300), x23(500), y23(100), strokeWidth5(10)])([]), line([x14(500), y14(300), x23(700), y23(100), strokeWidth5(15)])([]), line([x14(700), y14(300), x23(900), y23(100), strokeWidth5(20)])([]), line([x14(900), y14(300), x23(1100), y23(100), strokeWidth5(25)])([])])]);
  }();
  var ellipse01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example ellipse01 - examples of ellipses")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), g([transform4([new Translate(300, 200)])])([ellipse([rx2(250), ry2(100), fill5("red")])([])]), ellipse([transform4([new Translate(900, 200), new Rotate(-30, 0, 0)]), rx2(250), ry2(100), fill5("none"), stroke5("blue"), strokeWidth5(20)])([])]);
  }();
  var circle01 = /* @__PURE__ */ function() {
    return svg([width14(new Cm(12)), height14(new Cm(4)), viewBox(0)(0)(1200)(400)])([desc([])([text5("Example circle01 - circle filled with red and stroked with blue")]), rect([x6(1), y6(1), width15(1198), height15(398), fill5("none"), stroke5("blue"), strokeWidth5(2)])([]), circle([cx(isGeometry15)(600), cy(isGeometry15)(200), r(isGeometry15)(100), fill5("red"), stroke5("blue"), strokeWidth5(10)])([])]);
  }();
  var referenceTests4 = [{
    referenceURL: "./references/shapes/rect01.svg",
    actualSVG: rect01
  }, {
    referenceURL: "./references/shapes/rect02.svg",
    actualSVG: rect02
  }, {
    referenceURL: "./references/shapes/circle01.svg",
    actualSVG: circle01
  }, {
    referenceURL: "./references/shapes/ellipse01.svg",
    actualSVG: ellipse01
  }, {
    referenceURL: "./references/shapes/line01.svg",
    actualSVG: line01
  }, {
    referenceURL: "./references/shapes/polyline01.svg",
    actualSVG: polyline01
  }, {
    referenceURL: "./references/shapes/polygon01.svg",
    actualSVG: polygon01
  }];

  // output/SvgSpecificationTests.Text/index.js
  var isLengthPercentageNumber16 = /* @__PURE__ */ isLengthPercentageNumber1(isLengthPercentageLength);
  var width16 = /* @__PURE__ */ width8(isLengthPercentageNumber16);
  var height16 = /* @__PURE__ */ height8(isLengthPercentageNumber16);
  var fontFamily3 = /* @__PURE__ */ fontFamily(isFontFamilyString);
  var fontSize4 = /* @__PURE__ */ fontSize(/* @__PURE__ */ isFontSize1(isLengthPercentageLength));
  var fill6 = /* @__PURE__ */ fill(/* @__PURE__ */ fillAttribute(isPaintString));
  var isGeometry16 = /* @__PURE__ */ isGeometry1(isLengthPercentageNumberN);
  var x7 = /* @__PURE__ */ x(isGeometry16);
  var y7 = /* @__PURE__ */ y(isGeometry16);
  var rotate2 = /* @__PURE__ */ rotate(/* @__PURE__ */ rotateAttribute(/* @__PURE__ */ isTextRotateArray(isTextRotateInt)));
  var width17 = /* @__PURE__ */ width8(isLengthPercentageNumberN);
  var height17 = /* @__PURE__ */ height8(isLengthPercentageNumberN);
  var stroke6 = /* @__PURE__ */ stroke(isPaintString);
  var strokeWidth6 = /* @__PURE__ */ strokeWidth(isLengthPercentageNumberN);
  var dy2 = /* @__PURE__ */ dy(isGeometry16);
  var fontWeight2 = /* @__PURE__ */ fontWeight(isFontWeightFontWeight);
  var tspan05 = /* @__PURE__ */ function() {
    return svg([width16(new Cm(10)), height16(new Cm(3)), viewBox(0)(0)(500)(120)])([desc([])([text5("Example tspan05 - propagation of rotation values to nested tspan elements.")]), text6([fontFamily3("Arial, sans-serif"), fontSize4(new Px(32)), fill6("red"), x7(40), y7(40), rotate2([5, 15, 25, 35, 45, 55])])([text5("Not"), tspan([rotate2([-10 | 0, -20 | 0, -30 | 0, -40 | 0]), fill6("orange")])([text5("all characters"), tspan([rotate2([70, 60, 50, 40, 30, 20, 10]), fill6("yellow")])([text5("in"), tspan([id2("child3")])([text5("the")])]), tspan([id2("child4"), rotate2([-10 | 0]), fill6("orange"), x7(40), y7(90)])([text5("text")])]), text5("have a"), tspan([id2("child5"), rotate2([-10 | 0]), fill6("blue")])([text5("specified")]), text5("rotation")]), rect([x7(1), y7(1), width17(498), height17(118), fill6("none"), stroke6("blue"), strokeWidth6(2)])([])]);
  }();
  var tspan04 = /* @__PURE__ */ function() {
    return svg([width16(new Cm(10)), height16(new Cm(3)), viewBox(0)(0)(1e3)(300)])([desc([])([text5("Example tspan04 - The number of rotate values is less than the number of characters in the string.")]), text6([fontFamily3("Verdana"), fontSize4(new Px(55)), fill6("blue")])([tspan([x7(250), y7(150), rotate2([-30 | 0, 0, 30])])([text5("Hello, out there")])]), rect([x7(1), y7(1), width17(998), height17(298), fill6("none"), stroke6("blue"), strokeWidth6(2)])([])]);
  }();
  var tspan02 = /* @__PURE__ */ function() {
    return svg([width16(new Cm(10)), height16(new Cm(3)), viewBox(0)(0)(1e3)(300)])([g([fontFamily3("Verdana"), fontSize4(new Px(64))])([text6([x7(100), y7(180), fill6("blue")])([text5("But you"), tspan([dx(isGeometry1(isLengthPercentageNumber16))(new Em(2)), dy2(-50), fontWeight2(FontWeightBold.value), fill6("red")])([text5(" are ")]), tspan([dy2(100)])([text5("a peach!")])])])]);
  }();
  var tspan01 = /* @__PURE__ */ function() {
    return svg([width16(new Cm(10)), height16(new Cm(3)), viewBox(0)(0)(1e3)(300)])([g([fontFamily3("Verdana"), fontSize4(new Px(64))])([text6([x7(160), y7(180), fill6("blue")])([text5("You are"), tspan([fontWeight2(FontWeightBold.value), fill6("red")])([text5("not")]), text5("a banana.")])])]);
  }();
  var textWrapped = /* @__PURE__ */ svg([/* @__PURE__ */ width17(300), /* @__PURE__ */ height17(100), /* @__PURE__ */ viewBox(0)(0)(300)(100)])([/* @__PURE__ */ text6([/* @__PURE__ */ x7(20), /* @__PURE__ */ y7(45), /* @__PURE__ */ style2("font: 24px sans-serif; inline-size: 250px;")])([/* @__PURE__ */ text5("Example of text auto-wrapped.")])]);
  var textPreformatted = /* @__PURE__ */ svg([/* @__PURE__ */ width17(300), /* @__PURE__ */ height17(100), /* @__PURE__ */ viewBox(0)(0)(300)(100)])([/* @__PURE__ */ text6([/* @__PURE__ */ x7(20), /* @__PURE__ */ y7(45), /* @__PURE__ */ style2("font: 24px sans-serif;")])([/* @__PURE__ */ text5("Example of multi-line,"), /* @__PURE__ */ tspan([/* @__PURE__ */ x7(20), /* @__PURE__ */ y7(75), /* @__PURE__ */ style2("font: 24px sans-serif;")])([/* @__PURE__ */ text5("pre-formatted text.")])])]);
  var text01 = /* @__PURE__ */ function() {
    return svg([width16(new Cm(10)), height16(new Cm(3)), viewBox(0)(0)(1e3)(300)])([text6([x7(250), y7(180), fontFamily3("Verdana"), fontSize4(new Px(64)), fill6("blue")])([text5("Hello, out there!")])]);
  }();
  var referenceTests5 = [{
    referenceURL: "./references/text/text01.svg",
    actualSVG: text01
  }, {
    referenceURL: "./references/text/tspan01.svg",
    actualSVG: tspan01
  }, {
    referenceURL: "./references/text/tspan02.svg",
    actualSVG: tspan02
  }, {
    referenceURL: "./references/text/tspan04.svg",
    actualSVG: tspan04
  }, {
    referenceURL: "./references/text/tspan05.svg",
    actualSVG: tspan05
  }, {
    referenceURL: "./references/text/text-preformatted.svg",
    actualSVG: textPreformatted
  }, {
    referenceURL: "./references/text/text-wrapped.svg",
    actualSVG: textWrapped
  }];

  // output/SvgSpecificationTests.Main/index.js
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorArray);
  var fromFoldable4 = /* @__PURE__ */ fromFoldable(foldableSet);
  var lookup6 = /* @__PURE__ */ lookup(ordString);
  var modify_3 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var SelectSection = /* @__PURE__ */ function() {
    function SelectSection2(value0) {
      this.value0 = value0;
    }
    ;
    SelectSection2.create = function(value0) {
      return new SelectSection2(value0);
    };
    return SelectSection2;
  }();
  var referenceSections = /* @__PURE__ */ function() {
    return fromFoldable2(ordString)(foldableArray)([new Tuple("Text", referenceTests5), new Tuple("Painting", referenceTests2), new Tuple("Shapes", referenceTests4), new Tuple("Paths", referenceTests3), new Tuple("Animate", referenceTests)]);
  }();
  var component = /* @__PURE__ */ function() {
    var render = function(v2) {
      return div_([h1_([text5("SVG Specification Tests")]), select3([onValueChange(SelectSection.create)])(mapFlipped2(fromFoldable4(keys2(referenceSections)))(function(key) {
        return option_([text5(key)]);
      })), maybe(text5(v2.selectedSection))(referenceTable(v2.selectedSection))(lookup6(v2.selectedSection)(referenceSections))]);
    };
    var initialState = function(v2) {
      return {
        selectedSection: "Painting"
      };
    };
    var $$eval = function() {
      var handleAction = function(v2) {
        return modify_3(function(v1) {
          var $15 = {};
          for (var $16 in v1) {
            if ({}.hasOwnProperty.call(v1, $16)) {
              $15[$16] = v1[$16];
            }
            ;
          }
          ;
          $15.selectedSection = v2.value0;
          return $15;
        });
      };
      return mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction
      });
    }();
    return mkComponent({
      initialState,
      render,
      "eval": $$eval
    });
  }();
  var main2 = /* @__PURE__ */ runHalogenAff(/* @__PURE__ */ bind(bindAff)(awaitBody)(function(body2) {
    return runUI2(component)(unit)(body2);
  }));

  // <stdin>
  main2();
})();
